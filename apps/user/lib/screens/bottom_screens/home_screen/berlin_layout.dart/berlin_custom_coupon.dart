import 'package:fixit_user/config.dart';

/* //Add this CustomPaint widget to the Widget Tree
CustomPaint(
    size: Size(335, 55), 
    painter: RPSCustomPainter(),
) */

//Copy this CustomPainter code to the Bottom of the File
class BerlinCustomCoupon extends CustomPainter {
  @override
  void paint(Canvas canvas, Size size) {
    Path path_0 = Path();
    path_0.moveTo(0, 14);
    path_0.cubicTo(0, 7.40034, 0, 4.1005, 2.05025, 2.05025);
    path_0.cubicTo(4.1005, 0, 7.40034, 0, 14, 0);
    path_0.lineTo(321, 0);
    path_0.cubicTo(327.6, 0, 330.9, 0, 332.95, 2.05025);
    path_0.cubicTo(335, 4.1005, 335, 7.40034, 335, 14);
    path_0.lineTo(335, 19);
    path_0.cubicTo(331.134, 19, 328, 22.134, 328, 26);
    path_0.cubicTo(328, 29.866, 331.134, 33, 335, 33);
    path_0.lineTo(335, 41);
    path_0.cubicTo(335, 47.5997, 335, 50.8995, 332.95, 52.9497);
    path_0.cubicTo(330.9, 55, 327.6, 55, 321, 55);
    path_0.lineTo(14, 55);
    path_0.cubicTo(7.40033, 55, 4.1005, 55, 2.05025, 52.9497);
    path_0.cubicTo(0, 50.8995, 0, 47.5997, 0, 41);
    path_0.lineTo(0, 32.9291);
    path_0.cubicTo(0.326603, 32.9758, 0.660479, 33, 1, 33);
    path_0.cubicTo(4.86599, 33, 8, 29.866, 8, 26);
    path_0.cubicTo(8, 22.134, 4.86599, 19, 1, 19);
    path_0.cubicTo(0.660479, 19, 0.326603, 19.0242, 0, 19.0709);
    path_0.lineTo(0, 14);
    path_0.close();

    /*   Paint paint_0_fill = Paint()..style = PaintingStyle.fill;
    paint_0_fill.color = Color(0xff000000).withOpacity(1.0);
    canvas.drawPath(path_0, paint_0_fill); */

    Path path_1 = Path();
    path_1.moveTo(0, 14);
    path_1.cubicTo(0, 7.40034, 0, 4.1005, 2.05025, 2.05025);
    path_1.cubicTo(4.1005, 0, 7.40034, 0, 14, 0);
    path_1.lineTo(321, 0);
    path_1.cubicTo(327.6, 0, 330.9, 0, 332.95, 2.05025);
    path_1.cubicTo(335, 4.1005, 335, 7.40034, 335, 14);
    path_1.lineTo(335, 19);
    path_1.cubicTo(331.134, 19, 328, 22.134, 328, 26);
    path_1.cubicTo(328, 29.866, 331.134, 33, 335, 33);
    path_1.lineTo(335, 41);
    path_1.cubicTo(335, 47.5997, 335, 50.8995, 332.95, 52.9497);
    path_1.cubicTo(330.9, 55, 327.6, 55, 321, 55);
    path_1.lineTo(14, 55);
    path_1.cubicTo(7.40033, 55, 4.1005, 55, 2.05025, 52.9497);
    path_1.cubicTo(0, 50.8995, 0, 47.5997, 0, 41);
    path_1.lineTo(0, 32.9291);
    path_1.cubicTo(0.326603, 32.9758, 0.660479, 33, 1, 33);
    path_1.cubicTo(4.86599, 33, 8, 29.866, 8, 26);
    path_1.cubicTo(8, 22.134, 4.86599, 19, 1, 19);
    path_1.cubicTo(0.660479, 19, 0.326603, 19.0242, 0, 19.0709);
    path_1.lineTo(0, 14);
    path_1.close();

    Paint paint_1_fill = Paint()..style = PaintingStyle.fill;
    paint_1_fill.color = Color(0xff5465FF).withOpacity(0.1);
    canvas.drawPath(path_1, paint_1_fill);

    Path path_2 = Path();
    path_2.moveTo(332.95, 2.05025);
    path_2.lineTo(332.243, 2.75736);
    path_2.lineTo(332.243, 2.75736);
    path_2.lineTo(332.95, 2.05025);
    path_2.close();
    path_2.moveTo(335, 19);
    path_2.lineTo(335, 20);
    path_2.lineTo(336, 20);
    path_2.lineTo(336, 19);
    path_2.lineTo(335, 19);
    path_2.close();
    path_2.moveTo(335, 33);
    path_2.lineTo(336, 33);
    path_2.lineTo(336, 32);
    path_2.lineTo(335, 32);
    path_2.lineTo(335, 33);
    path_2.close();
    path_2.moveTo(332.95, 52.9497);
    path_2.lineTo(332.243, 52.2426);
    path_2.lineTo(332.243, 52.2426);
    path_2.lineTo(332.95, 52.9497);
    path_2.close();
    path_2.moveTo(2.05025, 52.9497);
    path_2.lineTo(1.34315, 53.6569);
    path_2.lineTo(1.34315, 53.6569);
    path_2.lineTo(2.05025, 52.9497);
    path_2.close();
    path_2.moveTo(0, 32.9291);
    path_2.lineTo(0.141603, 31.9392);
    path_2.lineTo(-1, 31.7759);
    path_2.lineTo(-1, 32.9291);
    path_2.lineTo(0, 32.9291);
    path_2.close();
    path_2.moveTo(0, 19.0709);
    path_2.lineTo(-1, 19.0709);
    path_2.lineTo(-1, 20.2241);
    path_2.lineTo(0.141597, 20.0608);
    path_2.lineTo(0, 19.0709);
    path_2.close();
    path_2.moveTo(1.34315, 1.34315);
    path_2.cubicTo(0.10125, 2.58504, -0.463611, 4.16876, -0.734801, 6.18585);
    path_2.cubicTo(-1.00212, 8.17417, -1, 10.7284, -1, 14);
    path_2.lineTo(1, 14);
    path_2.cubicTo(1, 10.6719, 1.00212, 8.27642, 1.24736, 6.45234);
    path_2.cubicTo(1.48874, 4.65704, 1.949, 3.56572, 2.75736, 2.75736);
    path_2.lineTo(1.34315, 1.34315);
    path_2.close();
    path_2.moveTo(14, -1);
    path_2.cubicTo(10.7284, -1, 8.17417, -1.00212, 6.18585, -0.734801);
    path_2.cubicTo(4.16876, -0.463611, 2.58504, 0.10125, 1.34315, 1.34315);
    path_2.lineTo(2.75736, 2.75736);
    path_2.cubicTo(3.56572, 1.949, 4.65704, 1.48874, 6.45234, 1.24736);
    path_2.cubicTo(8.27642, 1.00212, 10.6719, 1, 14, 1);
    path_2.lineTo(14, -1);
    path_2.close();
    path_2.moveTo(321, -1);
    path_2.lineTo(14, -1);
    path_2.lineTo(14, 1);
    path_2.lineTo(321, 1);
    path_2.lineTo(321, -1);
    path_2.close();
    path_2.moveTo(333.657, 1.34315);
    path_2.cubicTo(332.415, 0.101251, 330.831, -0.463611, 328.814, -0.734801);
    path_2.cubicTo(326.826, -1.00212, 324.272, -1, 321, -1);
    path_2.lineTo(321, 1);
    path_2.cubicTo(324.328, 1, 326.724, 1.00212, 328.548, 1.24736);
    path_2.cubicTo(330.343, 1.48874, 331.434, 1.949, 332.243, 2.75736);
    path_2.lineTo(333.657, 1.34315);
    path_2.close();
    path_2.moveTo(336, 14);
    path_2.cubicTo(336, 10.7284, 336.002, 8.17417, 335.735, 6.18585);
    path_2.cubicTo(335.464, 4.16876, 334.899, 2.58504, 333.657, 1.34314);
    path_2.lineTo(332.243, 2.75736);
    path_2.cubicTo(333.051, 3.56572, 333.511, 4.65704, 333.753, 6.45235);
    path_2.cubicTo(333.998, 8.27642, 334, 10.6719, 334, 14);
    path_2.lineTo(336, 14);
    path_2.close();
    path_2.moveTo(336, 19);
    path_2.lineTo(336, 14);
    path_2.lineTo(334, 14);
    path_2.lineTo(334, 19);
    path_2.lineTo(336, 19);
    path_2.close();
    path_2.moveTo(329, 26);
    path_2.cubicTo(329, 22.6863, 331.686, 20, 335, 20);
    path_2.lineTo(335, 18);
    path_2.cubicTo(330.582, 18, 327, 21.5817, 327, 26);
    path_2.lineTo(329, 26);
    path_2.close();
    path_2.moveTo(335, 32);
    path_2.cubicTo(331.686, 32, 329, 29.3137, 329, 26);
    path_2.lineTo(327, 26);
    path_2.cubicTo(327, 30.4183, 330.582, 34, 335, 34);
    path_2.lineTo(335, 32);
    path_2.close();
    path_2.moveTo(336, 41);
    path_2.lineTo(336, 33);
    path_2.lineTo(334, 33);
    path_2.lineTo(334, 41);
    path_2.lineTo(336, 41);
    path_2.close();
    path_2.moveTo(333.657, 53.6569);
    path_2.cubicTo(334.899, 52.415, 335.464, 50.8312, 335.735, 48.8142);
    path_2.cubicTo(336.002, 46.8258, 336, 44.2716, 336, 41);
    path_2.lineTo(334, 41);
    path_2.cubicTo(334, 44.3281, 333.998, 46.7236, 333.753, 48.5477);
    path_2.cubicTo(333.511, 50.343, 333.051, 51.4343, 332.243, 52.2426);
    path_2.lineTo(333.657, 53.6569);
    path_2.close();
    path_2.moveTo(321, 56);
    path_2.cubicTo(324.272, 56, 326.826, 56.0021, 328.814, 55.7348);
    path_2.cubicTo(330.831, 55.4636, 332.415, 54.8988, 333.657, 53.6569);
    path_2.lineTo(332.243, 52.2426);
    path_2.cubicTo(331.434, 53.051, 330.343, 53.5113, 328.548, 53.7526);
    path_2.cubicTo(326.724, 53.9979, 324.328, 54, 321, 54);
    path_2.lineTo(321, 56);
    path_2.close();
    path_2.moveTo(14, 56);
    path_2.lineTo(321, 56);
    path_2.lineTo(321, 54);
    path_2.lineTo(14, 54);
    path_2.lineTo(14, 56);
    path_2.close();
    path_2.moveTo(1.34315, 53.6569);
    path_2.cubicTo(2.58504, 54.8988, 4.16876, 55.4636, 6.18585, 55.7348);
    path_2.cubicTo(8.17417, 56.0021, 10.7284, 56, 14, 56);
    path_2.lineTo(14, 54);
    path_2.cubicTo(10.6719, 54, 8.27642, 53.9979, 6.45234, 53.7526);
    path_2.cubicTo(4.65704, 53.5113, 3.56572, 53.051, 2.75736, 52.2426);
    path_2.lineTo(1.34315, 53.6569);
    path_2.close();
    path_2.moveTo(-1, 41);
    path_2.cubicTo(-1, 44.2716, -1.00212, 46.8258, -0.734801, 48.8142);
    path_2.cubicTo(-0.463611, 50.8312, 0.10125, 52.415, 1.34315, 53.6569);
    path_2.lineTo(2.75736, 52.2426);
    path_2.cubicTo(1.949, 51.4343, 1.48874, 50.343, 1.24736, 48.5477);
    path_2.cubicTo(1.00212, 46.7236, 1, 44.3281, 1, 41);
    path_2.lineTo(-1, 41);
    path_2.close();
    path_2.moveTo(-1, 32.9291);
    path_2.lineTo(-1, 41);
    path_2.lineTo(1, 41);
    path_2.lineTo(1, 32.9291);
    path_2.lineTo(-1, 32.9291);
    path_2.close();
    path_2.moveTo(1, 32);
    path_2.cubicTo(0.707998, 32, 0.421441, 31.9792, 0.141603, 31.9392);
    path_2.lineTo(-0.141603, 33.919);
    path_2.cubicTo(0.231765, 33.9724, 0.612959, 34, 1, 34);
    path_2.lineTo(1, 32);
    path_2.close();
    path_2.moveTo(7, 26);
    path_2.cubicTo(7, 29.3137, 4.31371, 32, 1, 32);
    path_2.lineTo(1, 34);
    path_2.cubicTo(5.41828, 34, 9, 30.4183, 9, 26);
    path_2.lineTo(7, 26);
    path_2.close();
    path_2.moveTo(1, 20);
    path_2.cubicTo(4.31371, 20, 7, 22.6863, 7, 26);
    path_2.lineTo(9, 26);
    path_2.cubicTo(9, 21.5817, 5.41828, 18, 1, 18);
    path_2.lineTo(1, 20);
    path_2.close();
    path_2.moveTo(0.141597, 20.0608);
    path_2.cubicTo(0.421443, 20.0208, 0.708002, 20, 1, 20);
    path_2.lineTo(1, 18);
    path_2.cubicTo(0.612955, 18, 0.231763, 18.0276, -0.141597, 18.081);
    path_2.lineTo(0.141597, 20.0608);
    path_2.close();
    path_2.moveTo(-1, 14);
    path_2.lineTo(-1, 19.0709);
    path_2.lineTo(1, 19.0709);
    path_2.lineTo(1, 14);
    path_2.lineTo(-1, 14);
    path_2.close();

    Paint paint_2_fill = Paint()..style = PaintingStyle.fill;
    paint_2_fill.color = Color(0xff5465FF).withOpacity(0.1);
    canvas.drawPath(path_2, paint_2_fill);
  }

  @override
  bool shouldRepaint(covariant CustomPainter oldDelegate) {
    return true;
  }
}
