import 'package:fixit_user/config.dart';

//Copy this CustomPainter code to the Bottom of the File
class TokyoCustomCouponLayout extends CustomPainter {
  @override
  void paint(Canvas canvas, Size size) {
    Path path_0 = Path();
    path_0.moveTo(22, 0);
    path_0.lineTo(42.5815, 0);
    path_0.cubicTo(43.7683, 2.93183, 46.6426, 5, 50, 5);
    path_0.cubicTo(53.3574, 5, 56.2317, 2.93183, 57.4185, 0);
    path_0.lineTo(182, 0);
    path_0.cubicTo(192.371, 0, 197.556, 0, 200.778, 3.22183);
    path_0.cubicTo(204, 6.44365, 204, 11.6291, 204, 22);
    path_0.lineTo(204, 33.5041);
    path_0.cubicTo(197.099, 35.2802, 192, 41.5446, 192, 49);
    path_0.cubicTo(192, 56.4554, 197.099, 62.7198, 204, 64.4959);
    path_0.lineTo(204, 75);
    path_0.cubicTo(204, 85.3709, 204, 90.5564, 200.778, 93.7782);
    path_0.cubicTo(197.556, 97, 192.371, 97, 182, 97);
    path_0.lineTo(57.748, 97);
    path_0.cubicTo(56.8599, 93.5495, 53.7277, 91, 50, 91);
    path_0.cubicTo(46.2723, 91, 43.1401, 93.5495, 42.252, 97);
    path_0.lineTo(22, 97);
    path_0.cubicTo(11.6291, 97, 6.44365, 97, 3.22183, 93.7782);
    path_0.cubicTo(0, 90.5564, 0, 85.3709, 0, 75);
    path_0.lineTo(0, 63.3915);
    path_0.cubicTo(5.32847, 60.7949, 9, 55.3262, 9, 49);
    path_0.cubicTo(9, 42.6738, 5.32847, 37.2051, 0, 34.6085);
    path_0.lineTo(0, 22);
    path_0.cubicTo(0, 11.6291, 0, 6.44365, 3.22183, 3.22183);
    path_0.cubicTo(6.44365, 0, 11.6291, 0, 22, 0);
    path_0.close();

    /* Paint paint_0_fill = Paint()..style = PaintingStyle.fill;
    paint_0_fill.color = Color(0xff000000).withOpacity(1.0);
    canvas.drawPath(path_0, paint_0_fill); */

    Path path_1 = Path();
    path_1.moveTo(22, 0);
    path_1.lineTo(42.5815, 0);
    path_1.cubicTo(43.7683, 2.93183, 46.6426, 5, 50, 5);
    path_1.cubicTo(53.3574, 5, 56.2317, 2.93183, 57.4185, 0);
    path_1.lineTo(182, 0);
    path_1.cubicTo(192.371, 0, 197.556, 0, 200.778, 3.22183);
    path_1.cubicTo(204, 6.44365, 204, 11.6291, 204, 22);
    path_1.lineTo(204, 33.5041);
    path_1.cubicTo(197.099, 35.2802, 192, 41.5446, 192, 49);
    path_1.cubicTo(192, 56.4554, 197.099, 62.7198, 204, 64.4959);
    path_1.lineTo(204, 75);
    path_1.cubicTo(204, 85.3709, 204, 90.5564, 200.778, 93.7782);
    path_1.cubicTo(197.556, 97, 192.371, 97, 182, 97);
    path_1.lineTo(57.748, 97);
    path_1.cubicTo(56.8599, 93.5495, 53.7277, 91, 50, 91);
    path_1.cubicTo(46.2723, 91, 43.1401, 93.5495, 42.252, 97);
    path_1.lineTo(22, 97);
    path_1.cubicTo(11.6291, 97, 6.44365, 97, 3.22183, 93.7782);
    path_1.cubicTo(0, 90.5564, 0, 85.3709, 0, 75);
    path_1.lineTo(0, 63.3915);
    path_1.cubicTo(5.32847, 60.7949, 9, 55.3262, 9, 49);
    path_1.cubicTo(9, 42.6738, 5.32847, 37.2051, 0, 34.6085);
    path_1.lineTo(0, 22);
    path_1.cubicTo(0, 11.6291, 0, 6.44365, 3.22183, 3.22183);
    path_1.cubicTo(6.44365, 0, 11.6291, 0, 22, 0);
    path_1.close();

    Paint paint_1_fill = Paint()..style = PaintingStyle.fill;
    paint_1_fill.color = Color(0xff5465FF).withOpacity(0.1);
    canvas.drawPath(path_1, paint_1_fill);

    Path path_2 = Path();
    path_2.moveTo(42.5815, 0);
    path_2.lineTo(43.5085, -0.375215);
    path_2.lineTo(43.2555, -1);
    path_2.lineTo(42.5815, -1);
    path_2.lineTo(42.5815, 0);
    path_2.close();
    path_2.moveTo(57.4185, 0);
    path_2.lineTo(57.4185, -1);
    path_2.lineTo(56.7445, -1);
    path_2.lineTo(56.4915, -0.375215);
    path_2.lineTo(57.4185, 0);
    path_2.close();
    path_2.moveTo(200.778, 3.22183);
    path_2.lineTo(200.071, 3.92893);
    path_2.lineTo(200.071, 3.92893);
    path_2.lineTo(200.778, 3.22183);
    path_2.close();
    path_2.moveTo(204, 33.5041);
    path_2.lineTo(204.249, 34.4725);
    path_2.lineTo(205, 34.2793);
    path_2.lineTo(205, 33.5041);
    path_2.lineTo(204, 33.5041);
    path_2.close();
    path_2.moveTo(204, 64.4959);
    path_2.lineTo(205, 64.4959);
    path_2.lineTo(205, 63.7207);
    path_2.lineTo(204.249, 63.5275);
    path_2.lineTo(204, 64.4959);
    path_2.close();
    path_2.moveTo(200.778, 93.7782);
    path_2.lineTo(200.071, 93.0711);
    path_2.lineTo(200.778, 93.7782);
    path_2.close();
    path_2.moveTo(57.748, 97);
    path_2.lineTo(56.7795, 97.2493);
    path_2.lineTo(56.9728, 98);
    path_2.lineTo(57.748, 98);
    path_2.lineTo(57.748, 97);
    path_2.close();
    path_2.moveTo(42.252, 97);
    path_2.lineTo(42.252, 98);
    path_2.lineTo(43.0272, 98);
    path_2.lineTo(43.2205, 97.2493);
    path_2.lineTo(42.252, 97);
    path_2.close();
    path_2.moveTo(0, 63.3915);
    path_2.lineTo(-0.43806, 62.4926);
    path_2.lineTo(-1, 62.7664);
    path_2.lineTo(-1, 63.3915);
    path_2.lineTo(0, 63.3915);
    path_2.close();
    path_2.moveTo(0, 34.6085);
    path_2.lineTo(-1, 34.6085);
    path_2.lineTo(-1, 35.2336);
    path_2.lineTo(-0.43806, 35.5074);
    path_2.lineTo(0, 34.6085);
    path_2.close();
    path_2.moveTo(42.5815, -1);
    path_2.lineTo(22, -1);
    path_2.lineTo(22, 1);
    path_2.lineTo(42.5815, 1);
    path_2.lineTo(42.5815, -1);
    path_2.close();
    path_2.moveTo(50, 4);
    path_2.cubicTo(47.0639, 4, 44.5476, 2.19198, 43.5085, -0.375215);
    path_2.lineTo(41.6546, 0.375215);
    path_2.cubicTo(42.989, 3.67168, 46.2214, 6, 50, 6);
    path_2.lineTo(50, 4);
    path_2.close();
    path_2.moveTo(56.4915, -0.375215);
    path_2.cubicTo(55.4524, 2.19198, 52.9361, 4, 50, 4);
    path_2.lineTo(50, 6);
    path_2.cubicTo(53.7786, 6, 57.011, 3.67168, 58.3454, 0.375215);
    path_2.lineTo(56.4915, -0.375215);
    path_2.close();
    path_2.moveTo(182, -1);
    path_2.lineTo(57.4185, -1);
    path_2.lineTo(57.4185, 1);
    path_2.lineTo(182, 1);
    path_2.lineTo(182, -1);
    path_2.close();
    path_2.moveTo(201.485, 2.51472);
    path_2.cubicTo(199.658, 0.687037, 197.31, -0.170718, 194.203, -0.588355);
    path_2.cubicTo(191.126, -1.00212, 187.157, -1, 182, -1);
    path_2.lineTo(182, 1);
    path_2.cubicTo(187.214, 1, 191.023, 1.00212, 193.937, 1.39381);
    path_2.cubicTo(196.821, 1.78163, 198.677, 2.53479, 200.071, 3.92893);
    path_2.lineTo(201.485, 2.51472);
    path_2.close();
    path_2.moveTo(205, 22);
    path_2.cubicTo(205, 16.8428, 205.002, 12.8743, 204.588, 9.79676);
    path_2.cubicTo(204.171, 6.69042, 203.313, 4.3424, 201.485, 2.51472);
    path_2.lineTo(200.071, 3.92893);
    path_2.cubicTo(201.465, 5.32308, 202.218, 7.17869, 202.606, 10.0633);
    path_2.cubicTo(202.998, 12.9766, 203, 16.7863, 203, 22);
    path_2.lineTo(205, 22);
    path_2.close();
    path_2.moveTo(205, 33.5041);
    path_2.lineTo(205, 22);
    path_2.lineTo(203, 22);
    path_2.lineTo(203, 33.5041);
    path_2.lineTo(205, 33.5041);
    path_2.close();
    path_2.moveTo(193, 49);
    path_2.cubicTo(193, 42.012, 197.779, 36.1377, 204.249, 34.4725);
    path_2.lineTo(203.751, 32.5356);
    path_2.cubicTo(196.419, 34.4228, 191, 41.0773, 191, 49);
    path_2.lineTo(193, 49);
    path_2.close();
    path_2.moveTo(204.249, 63.5275);
    path_2.cubicTo(197.779, 61.8623, 193, 55.988, 193, 49);
    path_2.lineTo(191, 49);
    path_2.cubicTo(191, 56.9227, 196.419, 63.5772, 203.751, 65.4644);
    path_2.lineTo(204.249, 63.5275);
    path_2.close();
    path_2.moveTo(205, 75);
    path_2.lineTo(205, 64.4959);
    path_2.lineTo(203, 64.4959);
    path_2.lineTo(203, 75);
    path_2.lineTo(205, 75);
    path_2.close();
    path_2.moveTo(201.485, 94.4853);
    path_2.cubicTo(203.313, 92.6576, 204.171, 90.3096, 204.588, 87.2032);
    path_2.cubicTo(205.002, 84.1257, 205, 80.1572, 205, 75);
    path_2.lineTo(203, 75);
    path_2.cubicTo(203, 80.2137, 202.998, 84.0234, 202.606, 86.9367);
    path_2.cubicTo(202.218, 89.8213, 201.465, 91.6769, 200.071, 93.0711);
    path_2.lineTo(201.485, 94.4853);
    path_2.close();
    path_2.moveTo(182, 98);
    path_2.cubicTo(187.157, 98, 191.126, 98.0021, 194.203, 97.5884);
    path_2.cubicTo(197.31, 97.1707, 199.658, 96.313, 201.485, 94.4853);
    path_2.lineTo(200.071, 93.0711);
    path_2.cubicTo(198.677, 94.4652, 196.821, 95.2184, 193.937, 95.6062);
    path_2.cubicTo(191.023, 95.9979, 187.214, 96, 182, 96);
    path_2.lineTo(182, 98);
    path_2.close();
    path_2.moveTo(57.748, 98);
    path_2.lineTo(182, 98);
    path_2.lineTo(182, 96);
    path_2.lineTo(57.748, 96);
    path_2.lineTo(57.748, 98);
    path_2.close();
    path_2.moveTo(50, 92);
    path_2.cubicTo(53.2603, 92, 56.0024, 94.2299, 56.7795, 97.2493);
    path_2.lineTo(58.7164, 96.7507);
    path_2.cubicTo(57.7174, 92.8692, 54.195, 90, 50, 90);
    path_2.lineTo(50, 92);
    path_2.close();
    path_2.moveTo(43.2205, 97.2493);
    path_2.cubicTo(43.9976, 94.2299, 46.7397, 92, 50, 92);
    path_2.lineTo(50, 90);
    path_2.cubicTo(45.805, 90, 42.2826, 92.8692, 41.2836, 96.7507);
    path_2.lineTo(43.2205, 97.2493);
    path_2.close();
    path_2.moveTo(22, 98);
    path_2.lineTo(42.252, 98);
    path_2.lineTo(42.252, 96);
    path_2.lineTo(22, 96);
    path_2.lineTo(22, 98);
    path_2.close();
    path_2.moveTo(2.51472, 94.4853);
    path_2.cubicTo(4.3424, 96.313, 6.69042, 97.1707, 9.79676, 97.5884);
    path_2.cubicTo(12.8743, 98.0021, 16.8428, 98, 22, 98);
    path_2.lineTo(22, 96);
    path_2.cubicTo(16.7863, 96, 12.9766, 95.9979, 10.0633, 95.6062);
    path_2.cubicTo(7.17869, 95.2184, 5.32308, 94.4652, 3.92893, 93.0711);
    path_2.lineTo(2.51472, 94.4853);
    path_2.close();
    path_2.moveTo(-1, 75);
    path_2.cubicTo(-1, 80.1572, -1.00212, 84.1257, -0.588355, 87.2032);
    path_2.cubicTo(-0.170718, 90.3096, 0.687037, 92.6576, 2.51472, 94.4853);
    path_2.lineTo(3.92893, 93.0711);
    path_2.cubicTo(2.53479, 91.6769, 1.78163, 89.8213, 1.39381, 86.9367);
    path_2.cubicTo(1.00212, 84.0234, 1, 80.2137, 1, 75);
    path_2.lineTo(-1, 75);
    path_2.close();
    path_2.moveTo(-1, 63.3915);
    path_2.lineTo(-1, 75);
    path_2.lineTo(1, 75);
    path_2.lineTo(1, 63.3915);
    path_2.lineTo(-1, 63.3915);
    path_2.close();
    path_2.moveTo(8, 49);
    path_2.cubicTo(8, 54.9294, 4.55976, 60.0571, -0.43806, 62.4926);
    path_2.lineTo(0.43806, 64.2905);
    path_2.cubicTo(6.09718, 61.5328, 10, 55.7231, 10, 49);
    path_2.lineTo(8, 49);
    path_2.close();
    path_2.moveTo(-0.43806, 35.5074);
    path_2.cubicTo(4.55976, 37.9429, 8, 43.0706, 8, 49);
    path_2.lineTo(10, 49);
    path_2.cubicTo(10, 42.2769, 6.09718, 36.4672, 0.43806, 33.7095);
    path_2.lineTo(-0.43806, 35.5074);
    path_2.close();
    path_2.moveTo(-1, 22);
    path_2.lineTo(-1, 34.6085);
    path_2.lineTo(1, 34.6085);
    path_2.lineTo(1, 22);
    path_2.lineTo(-1, 22);
    path_2.close();
    path_2.moveTo(2.51472, 2.51472);
    path_2.cubicTo(0.687037, 4.3424, -0.170718, 6.69042, -0.588355, 9.79676);
    path_2.cubicTo(-1.00212, 12.8743, -1, 16.8428, -1, 22);
    path_2.lineTo(1, 22);
    path_2.cubicTo(1, 16.7863, 1.00212, 12.9766, 1.39381, 10.0633);
    path_2.cubicTo(1.78163, 7.17869, 2.53479, 5.32308, 3.92893, 3.92893);
    path_2.lineTo(2.51472, 2.51472);
    path_2.close();
    path_2.moveTo(22, -1);
    path_2.cubicTo(16.8428, -1, 12.8743, -1.00212, 9.79676, -0.588355);
    path_2.cubicTo(6.69042, -0.170718, 4.3424, 0.687037, 2.51472, 2.51472);
    path_2.lineTo(3.92893, 3.92893);
    path_2.cubicTo(5.32308, 2.53479, 7.17869, 1.78163, 10.0633, 1.39381);
    path_2.cubicTo(12.9766, 1.00212, 16.7863, 1, 22, 1);
    path_2.lineTo(22, -1);
    path_2.close();

    Paint paint_2_fill = Paint()..style = PaintingStyle.fill;
    paint_2_fill.color = Color(0xff5465FF).withOpacity(0.1);
    canvas.drawPath(path_2, paint_2_fill);

    Path path_3 = Path();
    path_3.moveTo(165, 90.4395);
    path_3.cubicTo(163.594, 90.4395, 162.187, 89.8926, 161.094, 88.877);
    path_3.lineTo(158.125, 85.9082);
    path_3.cubicTo(157.656, 85.4395, 157.109, 85.2051, 156.484, 85.2051);
    path_3.lineTo(152.266, 85.2051);
    path_3.cubicTo(149.219, 85.2051, 146.797, 82.7832, 146.797, 79.7363);
    path_3.lineTo(146.797, 75.5176);
    path_3.cubicTo(146.797, 74.8926, 146.562, 74.2676, 146.094, 73.877);
    path_3.lineTo(143.203, 70.9082);
    path_3.cubicTo(141.094, 68.7988, 141.094, 65.2832, 143.203, 63.1738);
    path_3.lineTo(146.172, 60.2051);
    path_3.cubicTo(146.641, 59.7363, 146.875, 59.1895, 146.875, 58.5645);
    path_3.lineTo(146.875, 54.3457);
    path_3.cubicTo(146.875, 51.2988, 149.297, 48.877, 152.344, 48.877);
    path_3.lineTo(156.562, 48.877);
    path_3.cubicTo(157.188, 48.877, 157.812, 48.6426, 158.203, 48.1738);
    path_3.lineTo(161.094, 45.2051);
    path_3.cubicTo(163.203, 43.0957, 166.719, 43.0957, 168.828, 45.2051);
    path_3.lineTo(171.797, 48.1738);
    path_3.cubicTo(172.266, 48.6426, 172.812, 48.877, 173.437, 48.877);
    path_3.lineTo(177.656, 48.877);
    path_3.cubicTo(180.703, 48.877, 183.125, 51.2988, 183.125, 54.3457);
    path_3.lineTo(183.125, 58.5645);
    path_3.cubicTo(183.125, 59.1895, 183.359, 59.8145, 183.828, 60.2051);
    path_3.lineTo(186.797, 63.1738);
    path_3.cubicTo(188.906, 65.2832, 188.906, 68.7988, 186.797, 70.9082);
    path_3.lineTo(183.828, 73.877);
    path_3.cubicTo(183.359, 74.3457, 183.125, 74.8926, 183.125, 75.5176);
    path_3.lineTo(183.125, 79.7363);
    path_3.cubicTo(183.125, 82.7832, 180.703, 85.2051, 177.656, 85.2051);
    path_3.lineTo(173.437, 85.2051);
    path_3.cubicTo(172.812, 85.2051, 172.188, 85.4395, 171.797, 85.9082);
    path_3.lineTo(168.906, 88.7988);
    path_3.cubicTo(167.812, 89.8926, 166.406, 90.4395, 165, 90.4395);
    path_3.close();
    path_3.moveTo(152.266, 51.9238);
    path_3.cubicTo(150.938, 51.9238, 149.922, 53.0176, 149.922, 54.2676);
    path_3.lineTo(149.922, 58.4863);
    path_3.cubicTo(149.922, 59.9707, 149.375, 61.2988, 148.281, 62.3926);
    path_3.lineTo(145.313, 65.3613);
    path_3.cubicTo(144.375, 66.2988, 144.375, 67.7832, 145.313, 68.7207);
    path_3.lineTo(148.281, 71.6895);
    path_3.cubicTo(149.297, 72.7051, 149.922, 74.1113, 149.922, 75.5957);
    path_3.lineTo(149.922, 79.8145);
    path_3.cubicTo(149.922, 81.1426, 151.016, 82.1582, 152.266, 82.1582);
    path_3.lineTo(156.484, 82.1582);
    path_3.cubicTo(157.969, 82.1582, 159.297, 82.7051, 160.391, 83.7988);
    path_3.lineTo(163.359, 86.7676);
    path_3.cubicTo(164.297, 87.7051, 165.781, 87.7051, 166.719, 86.7676);
    path_3.lineTo(169.687, 83.7988);
    path_3.cubicTo(170.703, 82.7832, 172.109, 82.1582, 173.594, 82.1582);
    path_3.lineTo(177.812, 82.1582);
    path_3.cubicTo(179.141, 82.1582, 180.156, 81.0645, 180.156, 79.8145);
    path_3.lineTo(180.156, 75.5957);
    path_3.cubicTo(180.156, 74.1113, 180.703, 72.7832, 181.797, 71.6895);
    path_3.lineTo(184.766, 68.7207);
    path_3.cubicTo(185.703, 67.7832, 185.703, 66.2988, 184.766, 65.3613);
    path_3.lineTo(181.797, 62.3926);
    path_3.cubicTo(180.781, 61.377, 180.156, 59.9707, 180.156, 58.4863);
    path_3.lineTo(180.156, 54.2676);
    path_3.cubicTo(180.156, 52.9395, 179.062, 51.9238, 177.812, 51.9238);
    path_3.lineTo(173.594, 51.9238);
    path_3.cubicTo(172.109, 51.9238, 170.781, 51.377, 169.687, 50.2832);
    path_3.lineTo(166.719, 47.3145);
    path_3.cubicTo(165.781, 46.377, 164.297, 46.377, 163.359, 47.3145);
    path_3.lineTo(160.391, 50.2832);
    path_3.cubicTo(159.375, 51.2988, 157.969, 51.9238, 156.484, 51.9238);
    path_3.lineTo(152.266, 51.9238);
    path_3.close();

    Paint paint_3_fill = Paint()..style = PaintingStyle.fill;
    paint_3_fill.color = Color(0xff5465FF).withOpacity(0.1);
    canvas.drawPath(path_3, paint_3_fill);

    Path path_4 = Path();
    path_4.moveTo(156.72, 76.8447);
    path_4.cubicTo(156.329, 76.8447, 155.938, 76.6885, 155.626, 76.376);
    path_4.cubicTo(155.001, 75.751, 155.001, 74.8135, 155.626, 74.1885);
    path_4.lineTo(172.188, 57.626);
    path_4.cubicTo(172.813, 57.001, 173.751, 57.001, 174.376, 57.626);
    path_4.cubicTo(175.001, 58.251, 175.001, 59.1885, 174.376, 59.8135);
    path_4.lineTo(157.813, 76.376);
    path_4.cubicTo(157.501, 76.6885, 157.11, 76.8447, 156.72, 76.8447);
    path_4.close();
    path_4.moveTo(171.173, 77.8604);
    path_4.cubicTo(168.595, 77.8604, 166.485, 75.751, 166.485, 73.1729);
    path_4.cubicTo(166.485, 70.5947, 168.595, 68.4854, 171.173, 68.4854);
    path_4.cubicTo(173.751, 68.4854, 175.86, 70.5947, 175.86, 73.1729);
    path_4.cubicTo(175.86, 75.751, 173.751, 77.8604, 171.173, 77.8604);
    path_4.close();
    path_4.moveTo(171.173, 71.6104);
    path_4.cubicTo(170.313, 71.6104, 169.61, 72.3135, 169.61, 73.1729);
    path_4.cubicTo(169.61, 74.0322, 170.313, 74.7354, 171.173, 74.7354);
    path_4.cubicTo(172.032, 74.7354, 172.735, 74.0322, 172.735, 73.1729);
    path_4.cubicTo(172.735, 72.3135, 172.032, 71.6104, 171.173, 71.6104);
    path_4.close();
    path_4.moveTo(158.829, 65.5166);
    path_4.cubicTo(156.251, 65.5166, 154.142, 63.4072, 154.142, 60.8291);
    path_4.cubicTo(154.142, 58.251, 156.251, 56.1416, 158.829, 56.1416);
    path_4.cubicTo(161.407, 56.1416, 163.517, 58.251, 163.517, 60.8291);
    path_4.cubicTo(163.517, 63.4072, 161.407, 65.5166, 158.829, 65.5166);
    path_4.close();
    path_4.moveTo(158.829, 59.2666);
    path_4.cubicTo(157.97, 59.2666, 157.267, 59.9697, 157.267, 60.8291);
    path_4.cubicTo(157.267, 61.6885, 157.97, 62.3916, 158.829, 62.3916);
    path_4.cubicTo(159.688, 62.3916, 160.392, 61.6885, 160.392, 60.8291);
    path_4.cubicTo(160.392, 59.9697, 159.688, 59.2666, 158.829, 59.2666);
    path_4.close();

    Paint paint_4_fill = Paint()..style = PaintingStyle.fill;
    paint_4_fill.color = Color(0xff5465FF).withOpacity(0.1);
    canvas.drawPath(path_4, paint_4_fill);
  }

  @override
  bool shouldRepaint(covariant CustomPainter oldDelegate) {
    return true;
  }
}
