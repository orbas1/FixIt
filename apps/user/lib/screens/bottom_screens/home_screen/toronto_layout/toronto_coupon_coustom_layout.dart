import 'dart:ui' as ui;

import 'package:fixit_user/config.dart';

//Add this CustomPaint widget to the Widget Tree

//Copy this CustomPainter code to the Bottom of the File
class TorontoCouponCoustomLayout extends CustomPainter {
  @override
  void paint(Canvas canvas, Size size) {
    Path path_0 = Path();
    path_0.moveTo(104.706, 0);
    path_0.lineTo(100.42, 0);
    path_0.cubicTo(99.4402, 2.34895, 97.1219, 4, 94.418, 4);
    path_0.cubicTo(91.714, 4, 89.3957, 2.34895, 88.4161, 0);
    path_0.lineTo(84.1307, 0);
    path_0.cubicTo(83.1512, 2.34895, 80.8329, 4, 78.1289, 4);
    path_0.cubicTo(75.425, 4, 73.1066, 2.34895, 72.1271, 0);
    path_0.lineTo(66.8407, 0);
    path_0.cubicTo(65.8611, 2.34895, 63.5428, 4, 60.8389, 4);
    path_0.cubicTo(58.1349, 4, 55.8166, 2.34895, 54.837, 0);
    path_0.lineTo(49.5507, 0);
    path_0.cubicTo(48.5711, 2.34895, 46.2528, 4, 43.5488, 4);
    path_0.cubicTo(40.8449, 4, 38.5266, 2.34895, 37.547, 0);
    path_0.lineTo(32.2606, 0);
    path_0.cubicTo(31.2811, 2.34895, 28.9627, 4, 26.2588, 4);
    path_0.cubicTo(23.5548, 4, 21.2365, 2.34895, 20.257, 0);
    path_0.lineTo(14.9706, 0);
    path_0.cubicTo(13.991, 2.34895, 11.6727, 4, 8.96875, 4);
    path_0.cubicTo(6.2648, 4, 3.94647, 2.34895, 2.96691, 0);
    path_0.lineTo(0, 0);
    path_0.lineTo(0, 71);
    path_0.cubicTo(6.07513, 71, 11, 75.9249, 11, 82);
    path_0.cubicTo(11, 88.0751, 6.07513, 93, 0, 93);
    path_0.lineTo(0, 136);
    path_0.lineTo(118, 136);
    path_0.lineTo(118, 92.9552);
    path_0.cubicTo(112.394, 92.4499, 108, 87.738, 108, 82);
    path_0.cubicTo(108, 76.262, 112.394, 71.5501, 118, 71.0448);
    path_0.lineTo(118, 0);
    path_0.lineTo(116.71, 0);
    path_0.cubicTo(115.73, 2.34895, 113.412, 4, 110.708, 4);
    path_0.cubicTo(108.004, 4, 105.686, 2.34895, 104.706, 0);
    path_0.close();

    Paint paint_0_fill = Paint()..style = PaintingStyle.fill;
    paint_0_fill.color = Color(0xff000000).withOpacity(1.0);
    canvas.drawPath(path_0, paint_0_fill);

    Path path_1 = Path();
    path_1.moveTo(104.706, 0);
    path_1.lineTo(100.42, 0);
    path_1.cubicTo(99.4402, 2.34895, 97.1219, 4, 94.418, 4);
    path_1.cubicTo(91.714, 4, 89.3957, 2.34895, 88.4161, 0);
    path_1.lineTo(84.1307, 0);
    path_1.cubicTo(83.1512, 2.34895, 80.8329, 4, 78.1289, 4);
    path_1.cubicTo(75.425, 4, 73.1066, 2.34895, 72.1271, 0);
    path_1.lineTo(66.8407, 0);
    path_1.cubicTo(65.8611, 2.34895, 63.5428, 4, 60.8389, 4);
    path_1.cubicTo(58.1349, 4, 55.8166, 2.34895, 54.837, 0);
    path_1.lineTo(49.5507, 0);
    path_1.cubicTo(48.5711, 2.34895, 46.2528, 4, 43.5488, 4);
    path_1.cubicTo(40.8449, 4, 38.5266, 2.34895, 37.547, 0);
    path_1.lineTo(32.2606, 0);
    path_1.cubicTo(31.2811, 2.34895, 28.9627, 4, 26.2588, 4);
    path_1.cubicTo(23.5548, 4, 21.2365, 2.34895, 20.257, 0);
    path_1.lineTo(14.9706, 0);
    path_1.cubicTo(13.991, 2.34895, 11.6727, 4, 8.96875, 4);
    path_1.cubicTo(6.2648, 4, 3.94647, 2.34895, 2.96691, 0);
    path_1.lineTo(0, 0);
    path_1.lineTo(0, 71);
    path_1.cubicTo(6.07513, 71, 11, 75.9249, 11, 82);
    path_1.cubicTo(11, 88.0751, 6.07513, 93, 0, 93);
    path_1.lineTo(0, 136);
    path_1.lineTo(118, 136);
    path_1.lineTo(118, 92.9552);
    path_1.cubicTo(112.394, 92.4499, 108, 87.738, 108, 82);
    path_1.cubicTo(108, 76.262, 112.394, 71.5501, 118, 71.0448);
    path_1.lineTo(118, 0);
    path_1.lineTo(116.71, 0);
    path_1.cubicTo(115.73, 2.34895, 113.412, 4, 110.708, 4);
    path_1.cubicTo(108.004, 4, 105.686, 2.34895, 104.706, 0);
    path_1.close();

    Paint paint_1_fill = Paint()..style = PaintingStyle.fill;
    paint_1_fill.color = Color(0xffEEF0FF).withOpacity(1.0);
    canvas.drawPath(path_1, paint_1_fill);

    Path path_2 = Path();
    path_2.moveTo(104.706, 0);
    path_2.lineTo(105.629, -0.384894);
    path_2.lineTo(105.373, -1);
    path_2.lineTo(104.706, -1);
    path_2.lineTo(104.706, 0);
    path_2.close();
    path_2.moveTo(100.42, 0);
    path_2.lineTo(100.42, -1);
    path_2.lineTo(99.7534, -1);
    path_2.lineTo(99.4968, -0.384894);
    path_2.lineTo(100.42, 0);
    path_2.close();
    path_2.moveTo(88.4161, 0);
    path_2.lineTo(89.3391, -0.384894);
    path_2.lineTo(89.0826, -1);
    path_2.lineTo(88.4161, -1);
    path_2.lineTo(88.4161, 0);
    path_2.close();
    path_2.moveTo(84.1307, 0);
    path_2.lineTo(84.1307, -1);
    path_2.lineTo(83.4643, -1);
    path_2.lineTo(83.2078, -0.384894);
    path_2.lineTo(84.1307, 0);
    path_2.close();
    path_2.moveTo(72.1271, 0);
    path_2.lineTo(73.05, -0.384894);
    path_2.lineTo(72.7935, -1);
    path_2.lineTo(72.1271, -1);
    path_2.lineTo(72.1271, 0);
    path_2.close();
    path_2.moveTo(66.8407, 0);
    path_2.lineTo(66.8407, -1);
    path_2.lineTo(66.1743, -1);
    path_2.lineTo(65.9177, -0.384894);
    path_2.lineTo(66.8407, 0);
    path_2.close();
    path_2.moveTo(54.837, 0);
    path_2.lineTo(55.76, -0.384894);
    path_2.lineTo(55.5035, -1);
    path_2.lineTo(54.837, -1);
    path_2.lineTo(54.837, 0);
    path_2.close();
    path_2.moveTo(49.5507, 0);
    path_2.lineTo(49.5507, -1);
    path_2.lineTo(48.8842, -1);
    path_2.lineTo(48.6277, -0.384894);
    path_2.lineTo(49.5507, 0);
    path_2.close();
    path_2.moveTo(37.547, 0);
    path_2.lineTo(38.47, -0.384894);
    path_2.lineTo(38.2134, -1);
    path_2.lineTo(37.547, -1);
    path_2.lineTo(37.547, 0);
    path_2.close();
    path_2.moveTo(32.2606, 0);
    path_2.lineTo(32.2606, -1);
    path_2.lineTo(31.5942, -1);
    path_2.lineTo(31.3377, -0.384893);
    path_2.lineTo(32.2606, 0);
    path_2.close();
    path_2.moveTo(20.257, 0);
    path_2.lineTo(21.1799, -0.384893);
    path_2.lineTo(20.9234, -1);
    path_2.lineTo(20.257, -1);
    path_2.lineTo(20.257, 0);
    path_2.close();
    path_2.moveTo(14.9706, 0);
    path_2.lineTo(14.9706, -1);
    path_2.lineTo(14.3041, -1);
    path_2.lineTo(14.0476, -0.384893);
    path_2.lineTo(14.9706, 0);
    path_2.close();
    path_2.moveTo(2.96691, 0);
    path_2.lineTo(3.88987, -0.384893);
    path_2.lineTo(3.63336, -1);
    path_2.lineTo(2.96691, -1);
    path_2.lineTo(2.96691, 0);
    path_2.close();
    path_2.moveTo(0, 0);
    path_2.lineTo(0, -1);
    path_2.lineTo(-1, -1);
    path_2.lineTo(-1, 0);
    path_2.lineTo(0, 0);
    path_2.close();
    path_2.moveTo(0, 71);
    path_2.lineTo(-1, 71);
    path_2.lineTo(-1, 72);
    path_2.lineTo(0, 72);
    path_2.lineTo(0, 71);
    path_2.close();
    path_2.moveTo(0, 93);
    path_2.lineTo(0, 92);
    path_2.lineTo(-1, 92);
    path_2.lineTo(-1, 93);
    path_2.lineTo(0, 93);
    path_2.close();
    path_2.moveTo(0, 136);
    path_2.lineTo(-1, 136);
    path_2.lineTo(-1, 137);
    path_2.lineTo(0, 137);
    path_2.lineTo(0, 136);
    path_2.close();
    path_2.moveTo(118, 136);
    path_2.lineTo(118, 137);
    path_2.lineTo(119, 137);
    path_2.lineTo(119, 136);
    path_2.lineTo(118, 136);
    path_2.close();
    path_2.moveTo(118, 92.9552);
    path_2.lineTo(119, 92.9552);
    path_2.lineTo(119, 92.0412);
    path_2.lineTo(118.09, 91.9592);
    path_2.lineTo(118, 92.9552);
    path_2.close();
    path_2.moveTo(118, 71.0448);
    path_2.lineTo(118.09, 72.0408);
    path_2.lineTo(119, 71.9588);
    path_2.lineTo(119, 71.0448);
    path_2.lineTo(118, 71.0448);
    path_2.close();
    path_2.moveTo(118, 0);
    path_2.lineTo(119, 0);
    path_2.lineTo(119, -1);
    path_2.lineTo(118, -1);
    path_2.lineTo(118, 0);
    path_2.close();
    path_2.moveTo(116.71, 0);
    path_2.lineTo(116.71, -1);
    path_2.lineTo(116.043, -1);
    path_2.lineTo(115.787, -0.384894);
    path_2.lineTo(116.71, 0);
    path_2.close();
    path_2.moveTo(104.706, -1);
    path_2.lineTo(100.42, -1);
    path_2.lineTo(100.42, 1);
    path_2.lineTo(104.706, 1);
    path_2.lineTo(104.706, -1);
    path_2.close();
    path_2.moveTo(99.4968, -0.384894);
    path_2.cubicTo(98.6672, 1.60462, 96.7044, 3, 94.418, 3);
    path_2.lineTo(94.418, 5);
    path_2.cubicTo(97.5395, 5, 100.213, 3.09328, 101.343, 0.384894);
    path_2.lineTo(99.4968, -0.384894);
    path_2.close();
    path_2.moveTo(94.418, 3);
    path_2.cubicTo(92.1316, 3, 90.1688, 1.60462, 89.3391, -0.384894);
    path_2.lineTo(87.4932, 0.384894);
    path_2.cubicTo(88.6226, 3.09328, 91.2965, 5, 94.418, 5);
    path_2.lineTo(94.418, 3);
    path_2.close();
    path_2.moveTo(88.4161, -1);
    path_2.lineTo(84.1307, -1);
    path_2.lineTo(84.1307, 1);
    path_2.lineTo(88.4161, 1);
    path_2.lineTo(88.4161, -1);
    path_2.close();
    path_2.moveTo(83.2078, -0.384894);
    path_2.cubicTo(82.3781, 1.60462, 80.4153, 3, 78.1289, 3);
    path_2.lineTo(78.1289, 5);
    path_2.cubicTo(81.2504, 5, 83.9243, 3.09328, 85.0537, 0.384894);
    path_2.lineTo(83.2078, -0.384894);
    path_2.close();
    path_2.moveTo(78.1289, 3);
    path_2.cubicTo(75.8425, 3, 73.8797, 1.60462, 73.05, -0.384894);
    path_2.lineTo(71.2041, 0.384894);
    path_2.cubicTo(72.3336, 3.09328, 75.0074, 5, 78.1289, 5);
    path_2.lineTo(78.1289, 3);
    path_2.close();
    path_2.moveTo(72.1271, -1);
    path_2.lineTo(66.8407, -1);
    path_2.lineTo(66.8407, 1);
    path_2.lineTo(72.1271, 1);
    path_2.lineTo(72.1271, -1);
    path_2.close();
    path_2.moveTo(65.9177, -0.384894);
    path_2.cubicTo(65.0881, 1.60462, 63.1253, 3, 60.8389, 3);
    path_2.lineTo(60.8389, 5);
    path_2.cubicTo(63.9604, 5, 66.6342, 3.09328, 67.7637, 0.384894);
    path_2.lineTo(65.9177, -0.384894);
    path_2.close();
    path_2.moveTo(60.8389, 3);
    path_2.cubicTo(58.5525, 3, 56.5897, 1.60462, 55.76, -0.384894);
    path_2.lineTo(53.9141, 0.384894);
    path_2.cubicTo(55.0435, 3.09328, 57.7174, 5, 60.8389, 5);
    path_2.lineTo(60.8389, 3);
    path_2.close();
    path_2.moveTo(54.837, -1);
    path_2.lineTo(49.5507, -1);
    path_2.lineTo(49.5507, 1);
    path_2.lineTo(54.837, 1);
    path_2.lineTo(54.837, -1);
    path_2.close();
    path_2.moveTo(48.6277, -0.384894);
    path_2.cubicTo(47.798, 1.60462, 45.8352, 3, 43.5488, 3);
    path_2.lineTo(43.5488, 5);
    path_2.cubicTo(46.6703, 5, 49.3442, 3.09328, 50.4736, 0.384894);
    path_2.lineTo(48.6277, -0.384894);
    path_2.close();
    path_2.moveTo(43.5488, 3);
    path_2.cubicTo(41.2624, 3, 39.2996, 1.60462, 38.47, -0.384894);
    path_2.lineTo(36.624, 0.384894);
    path_2.cubicTo(37.7535, 3.09328, 40.4273, 5, 43.5488, 5);
    path_2.lineTo(43.5488, 3);
    path_2.close();
    path_2.moveTo(37.547, -1);
    path_2.lineTo(32.2606, -1);
    path_2.lineTo(32.2606, 1);
    path_2.lineTo(37.547, 1);
    path_2.lineTo(37.547, -1);
    path_2.close();
    path_2.moveTo(31.3377, -0.384893);
    path_2.cubicTo(30.508, 1.60462, 28.5452, 3, 26.2588, 3);
    path_2.lineTo(26.2588, 5);
    path_2.cubicTo(29.3803, 5, 32.0541, 3.09328, 33.1836, 0.384893);
    path_2.lineTo(31.3377, -0.384893);
    path_2.close();
    path_2.moveTo(26.2588, 3);
    path_2.cubicTo(23.9724, 3, 22.0096, 1.60462, 21.1799, -0.384893);
    path_2.lineTo(19.334, 0.384893);
    path_2.cubicTo(20.4634, 3.09328, 23.1373, 5, 26.2588, 5);
    path_2.lineTo(26.2588, 3);
    path_2.close();
    path_2.moveTo(20.257, -1);
    path_2.lineTo(14.9706, -1);
    path_2.lineTo(14.9706, 1);
    path_2.lineTo(20.257, 1);
    path_2.lineTo(20.257, -1);
    path_2.close();
    path_2.moveTo(14.0476, -0.384893);
    path_2.cubicTo(13.218, 1.60462, 11.2551, 3, 8.96875, 3);
    path_2.lineTo(8.96875, 5);
    path_2.cubicTo(12.0903, 5, 14.7641, 3.09328, 15.8935, 0.384893);
    path_2.lineTo(14.0476, -0.384893);
    path_2.close();
    path_2.moveTo(8.96875, 3);
    path_2.cubicTo(6.68236, 3, 4.71954, 1.60462, 3.88987, -0.384893);
    path_2.lineTo(2.04395, 0.384893);
    path_2.cubicTo(3.1734, 3.09328, 5.84724, 5, 8.96875, 5);
    path_2.lineTo(8.96875, 3);
    path_2.close();
    path_2.moveTo(2.96691, -1);
    path_2.lineTo(0, -1);
    path_2.lineTo(0, 1);
    path_2.lineTo(2.96691, 1);
    path_2.lineTo(2.96691, -1);
    path_2.close();
    path_2.moveTo(-1, 0);
    path_2.lineTo(-1, 71);
    path_2.lineTo(1, 71);
    path_2.lineTo(1, 0);
    path_2.lineTo(-1, 0);
    path_2.close();
    path_2.moveTo(0, 72);
    path_2.cubicTo(5.52285, 72, 10, 76.4772, 10, 82);
    path_2.lineTo(12, 82);
    path_2.cubicTo(12, 75.3726, 6.62742, 70, 0, 70);
    path_2.lineTo(0, 72);
    path_2.close();
    path_2.moveTo(10, 82);
    path_2.cubicTo(10, 87.5228, 5.52285, 92, 0, 92);
    path_2.lineTo(0, 94);
    path_2.cubicTo(6.62742, 94, 12, 88.6274, 12, 82);
    path_2.lineTo(10, 82);
    path_2.close();
    path_2.moveTo(-1, 93);
    path_2.lineTo(-1, 136);
    path_2.lineTo(1, 136);
    path_2.lineTo(1, 93);
    path_2.lineTo(-1, 93);
    path_2.close();
    path_2.moveTo(0, 137);
    path_2.lineTo(118, 137);
    path_2.lineTo(118, 135);
    path_2.lineTo(0, 135);
    path_2.lineTo(0, 137);
    path_2.close();
    path_2.moveTo(119, 136);
    path_2.lineTo(119, 92.9552);
    path_2.lineTo(117, 92.9552);
    path_2.lineTo(117, 136);
    path_2.lineTo(119, 136);
    path_2.close();
    path_2.moveTo(118.09, 91.9592);
    path_2.cubicTo(112.994, 91.5, 109, 87.2159, 109, 82);
    path_2.lineTo(107, 82);
    path_2.cubicTo(107, 88.2602, 111.793, 93.3999, 117.91, 93.9511);
    path_2.lineTo(118.09, 91.9592);
    path_2.close();
    path_2.moveTo(109, 82);
    path_2.cubicTo(109, 76.7841, 112.994, 72.5, 118.09, 72.0408);
    path_2.lineTo(117.91, 70.0489);
    path_2.cubicTo(111.793, 70.6001, 107, 75.7398, 107, 82);
    path_2.lineTo(109, 82);
    path_2.close();
    path_2.moveTo(119, 71.0448);
    path_2.lineTo(119, 0);
    path_2.lineTo(117, 0);
    path_2.lineTo(117, 71.0448);
    path_2.lineTo(119, 71.0448);
    path_2.close();
    path_2.moveTo(118, -1);
    path_2.lineTo(116.71, -1);
    path_2.lineTo(116.71, 1);
    path_2.lineTo(118, 1);
    path_2.lineTo(118, -1);
    path_2.close();
    path_2.moveTo(115.787, -0.384894);
    path_2.cubicTo(114.957, 1.60462, 112.994, 3, 110.708, 3);
    path_2.lineTo(110.708, 5);
    path_2.cubicTo(113.83, 5, 116.503, 3.09328, 117.633, 0.384894);
    path_2.lineTo(115.787, -0.384894);
    path_2.close();
    path_2.moveTo(110.708, 3);
    path_2.cubicTo(108.422, 3, 106.459, 1.60462, 105.629, -0.384894);
    path_2.lineTo(103.783, 0.384894);
    path_2.cubicTo(104.913, 3.09328, 107.586, 5, 110.708, 5);
    path_2.lineTo(110.708, 3);
    path_2.close();

    Paint paint_2_fill = Paint()..style = PaintingStyle.fill;
    paint_2_fill.color = Color(0xff5465FF).withOpacity(0.1);
    canvas.drawPath(path_2, paint_2_fill);
  }

  @override
  bool shouldRepaint(covariant CustomPainter oldDelegate) {
    return true;
  }
}
