import 'package:fixit_user/config.dart';

//Copy this CustomPainter code to the Bottom of the File
class DubaiCustomCouponLayout extends CustomPainter {
  @override
  void paint(Canvas canvas, Size size) {
    Path path_0 = Path();
    path_0.moveTo(123.208, 0.5);
    path_0.cubicTo(123.208, 4.08985, 120.298, 7, 116.708, 7);
    path_0.cubicTo(113.118, 7, 110.208, 4.08985, 110.208, 0.5);
    path_0.cubicTo(110.208, 0.331764, 110.214, 0.165021, 110.227, 0);
    path_0.lineTo(105.899, 0);
    path_0.cubicTo(105.912, 0.165021, 105.918, 0.331764, 105.918, 0.5);
    path_0.cubicTo(105.918, 4.08985, 103.008, 7, 99.418, 7);
    path_0.cubicTo(95.8281, 7, 92.918, 4.08985, 92.918, 0.5);
    path_0.cubicTo(92.918, 0.331764, 92.9244, 0.165021, 92.9369, 0);
    path_0.lineTo(88.61, 0);
    path_0.cubicTo(88.6225, 0.165021, 88.6289, 0.331764, 88.6289, 0.5);
    path_0.cubicTo(88.6289, 4.08985, 85.7188, 7, 82.1289, 7);
    path_0.cubicTo(78.5391, 7, 75.6289, 4.08985, 75.6289, 0.5);
    path_0.cubicTo(75.6289, 0.331764, 75.6353, 0.165021, 75.6479, 0);
    path_0.lineTo(71.3199, 0);
    path_0.cubicTo(71.3325, 0.165021, 71.3389, 0.331764, 71.3389, 0.5);
    path_0.cubicTo(71.3389, 4.08985, 68.4287, 7, 64.8389, 7);
    path_0.cubicTo(61.249, 7, 58.3389, 4.08985, 58.3389, 0.5);
    path_0.cubicTo(58.3389, 0.331764, 58.3453, 0.165021, 58.3578, 0);
    path_0.lineTo(54.0299, 0);
    path_0.cubicTo(54.0424, 0.165021, 54.0488, 0.331764, 54.0488, 0.5);
    path_0.cubicTo(54.0488, 4.08985, 51.1387, 7, 47.5488, 7);
    path_0.cubicTo(43.959, 7, 41.0488, 4.08985, 41.0488, 0.5);
    path_0.cubicTo(41.0488, 0.331764, 41.0552, 0.165021, 41.0678, 0);
    path_0.lineTo(36.7398, 0);
    path_0.cubicTo(36.7524, 0.165021, 36.7588, 0.331764, 36.7588, 0.5);
    path_0.cubicTo(36.7588, 4.08985, 33.8486, 7, 30.2588, 7);
    path_0.cubicTo(26.6689, 7, 23.7588, 4.08985, 23.7588, 0.5);
    path_0.cubicTo(23.7588, 0.331764, 23.7652, 0.165021, 23.7777, 0);
    path_0.lineTo(19.4498, 0);
    path_0.cubicTo(19.4624, 0.165021, 19.4688, 0.331764, 19.4688, 0.5);
    path_0.cubicTo(19.4688, 4.08985, 16.5586, 7, 12.9688, 7);
    path_0.cubicTo(9.3789, 7, 6.46875, 4.08985, 6.46875, 0.5);
    path_0.cubicTo(6.46875, 0.331764, 6.47514, 0.165021, 6.48769, 0);
    path_0.lineTo(0, 0);
    path_0.lineTo(0, 128);
    path_0.lineTo(4.48821, 128);
    path_0.cubicTo(4.47532, 127.833, 4.46875, 127.664, 4.46875, 127.493);
    path_0.cubicTo(4.46875, 123.898, 7.38338, 120.983, 10.9788, 120.983);
    path_0.cubicTo(14.5741, 120.983, 17.4888, 123.898, 17.4888, 127.493);
    path_0.cubicTo(17.4888, 127.664, 17.4822, 127.833, 17.4693, 128);
    path_0.lineTo(22.5058, 128);
    path_0.cubicTo(22.4929, 127.833, 22.4863, 127.664, 22.4863, 127.493);
    path_0.cubicTo(22.4863, 123.898, 25.401, 120.983, 28.9963, 120.983);
    path_0.cubicTo(32.5917, 120.983, 35.5063, 123.898, 35.5063, 127.493);
    path_0.cubicTo(35.5063, 127.664, 35.4998, 127.833, 35.4869, 128);
    path_0.lineTo(40.5234, 128);
    path_0.cubicTo(40.5105, 127.833, 40.5039, 127.664, 40.5039, 127.493);
    path_0.cubicTo(40.5039, 123.898, 43.4185, 120.983, 47.0139, 120.983);
    path_0.cubicTo(50.6093, 120.983, 53.5239, 123.898, 53.5239, 127.493);
    path_0.cubicTo(53.5239, 127.664, 53.5173, 127.833, 53.5044, 128);
    path_0.lineTo(58.5409, 128);
    path_0.cubicTo(58.528, 127.833, 58.5215, 127.664, 58.5215, 127.493);
    path_0.cubicTo(58.5215, 123.898, 61.4361, 120.983, 65.0315, 120.983);
    path_0.cubicTo(68.6269, 120.983, 71.5415, 123.898, 71.5415, 127.493);
    path_0.cubicTo(71.5415, 127.664, 71.5349, 127.833, 71.522, 128);
    path_0.lineTo(76.5585, 128);
    path_0.cubicTo(76.5456, 127.833, 76.5391, 127.664, 76.5391, 127.493);
    path_0.cubicTo(76.5391, 123.898, 79.4537, 120.983, 83.0491, 120.983);
    path_0.cubicTo(86.6444, 120.983, 89.5591, 123.898, 89.5591, 127.493);
    path_0.cubicTo(89.5591, 127.664, 89.5525, 127.833, 89.5396, 128);
    path_0.lineTo(94.5761, 128);
    path_0.cubicTo(94.5632, 127.833, 94.5566, 127.664, 94.5566, 127.493);
    path_0.cubicTo(94.5566, 123.898, 97.4713, 120.983, 101.067, 120.983);
    path_0.cubicTo(104.662, 120.983, 107.577, 123.898, 107.577, 127.493);
    path_0.cubicTo(107.577, 127.664, 107.57, 127.833, 107.557, 128);
    path_0.lineTo(112.594, 128);
    path_0.cubicTo(112.581, 127.833, 112.574, 127.664, 112.574, 127.493);
    path_0.cubicTo(112.574, 123.898, 115.489, 120.983, 119.084, 120.983);
    path_0.cubicTo(122.68, 120.983, 125.594, 123.898, 125.594, 127.493);
    path_0.cubicTo(125.594, 127.664, 125.588, 127.833, 125.575, 128);
    path_0.lineTo(130, 128);
    path_0.lineTo(130, 0);
    path_0.lineTo(123.189, 0);
    path_0.cubicTo(123.202, 0.165021, 123.208, 0.331764, 123.208, 0.5);
    path_0.close();

    /* Paint paint_0_fill = Paint()..style = PaintingStyle.fill;
    paint_0_fill.color = Color(0xff000000).withOpacity(1.0);
    canvas.drawPath(path_0, paint_0_fill); */

    Path path_1 = Path();
    path_1.moveTo(123.208, 0.5);
    path_1.cubicTo(123.208, 4.08985, 120.298, 7, 116.708, 7);
    path_1.cubicTo(113.118, 7, 110.208, 4.08985, 110.208, 0.5);
    path_1.cubicTo(110.208, 0.331764, 110.214, 0.165021, 110.227, 0);
    path_1.lineTo(105.899, 0);
    path_1.cubicTo(105.912, 0.165021, 105.918, 0.331764, 105.918, 0.5);
    path_1.cubicTo(105.918, 4.08985, 103.008, 7, 99.418, 7);
    path_1.cubicTo(95.8281, 7, 92.918, 4.08985, 92.918, 0.5);
    path_1.cubicTo(92.918, 0.331764, 92.9244, 0.165021, 92.9369, 0);
    path_1.lineTo(88.61, 0);
    path_1.cubicTo(88.6225, 0.165021, 88.6289, 0.331764, 88.6289, 0.5);
    path_1.cubicTo(88.6289, 4.08985, 85.7188, 7, 82.1289, 7);
    path_1.cubicTo(78.5391, 7, 75.6289, 4.08985, 75.6289, 0.5);
    path_1.cubicTo(75.6289, 0.331764, 75.6353, 0.165021, 75.6479, 0);
    path_1.lineTo(71.3199, 0);
    path_1.cubicTo(71.3325, 0.165021, 71.3389, 0.331764, 71.3389, 0.5);
    path_1.cubicTo(71.3389, 4.08985, 68.4287, 7, 64.8389, 7);
    path_1.cubicTo(61.249, 7, 58.3389, 4.08985, 58.3389, 0.5);
    path_1.cubicTo(58.3389, 0.331764, 58.3453, 0.165021, 58.3578, 0);
    path_1.lineTo(54.0299, 0);
    path_1.cubicTo(54.0424, 0.165021, 54.0488, 0.331764, 54.0488, 0.5);
    path_1.cubicTo(54.0488, 4.08985, 51.1387, 7, 47.5488, 7);
    path_1.cubicTo(43.959, 7, 41.0488, 4.08985, 41.0488, 0.5);
    path_1.cubicTo(41.0488, 0.331764, 41.0552, 0.165021, 41.0678, 0);
    path_1.lineTo(36.7398, 0);
    path_1.cubicTo(36.7524, 0.165021, 36.7588, 0.331764, 36.7588, 0.5);
    path_1.cubicTo(36.7588, 4.08985, 33.8486, 7, 30.2588, 7);
    path_1.cubicTo(26.6689, 7, 23.7588, 4.08985, 23.7588, 0.5);
    path_1.cubicTo(23.7588, 0.331764, 23.7652, 0.165021, 23.7777, 0);
    path_1.lineTo(19.4498, 0);
    path_1.cubicTo(19.4624, 0.165021, 19.4688, 0.331764, 19.4688, 0.5);
    path_1.cubicTo(19.4688, 4.08985, 16.5586, 7, 12.9688, 7);
    path_1.cubicTo(9.3789, 7, 6.46875, 4.08985, 6.46875, 0.5);
    path_1.cubicTo(6.46875, 0.331764, 6.47514, 0.165021, 6.48769, 0);
    path_1.lineTo(0, 0);
    path_1.lineTo(0, 128);
    path_1.lineTo(4.48821, 128);
    path_1.cubicTo(4.47532, 127.833, 4.46875, 127.664, 4.46875, 127.493);
    path_1.cubicTo(4.46875, 123.898, 7.38338, 120.983, 10.9788, 120.983);
    path_1.cubicTo(14.5741, 120.983, 17.4888, 123.898, 17.4888, 127.493);
    path_1.cubicTo(17.4888, 127.664, 17.4822, 127.833, 17.4693, 128);
    path_1.lineTo(22.5058, 128);
    path_1.cubicTo(22.4929, 127.833, 22.4863, 127.664, 22.4863, 127.493);
    path_1.cubicTo(22.4863, 123.898, 25.401, 120.983, 28.9963, 120.983);
    path_1.cubicTo(32.5917, 120.983, 35.5063, 123.898, 35.5063, 127.493);
    path_1.cubicTo(35.5063, 127.664, 35.4998, 127.833, 35.4869, 128);
    path_1.lineTo(40.5234, 128);
    path_1.cubicTo(40.5105, 127.833, 40.5039, 127.664, 40.5039, 127.493);
    path_1.cubicTo(40.5039, 123.898, 43.4185, 120.983, 47.0139, 120.983);
    path_1.cubicTo(50.6093, 120.983, 53.5239, 123.898, 53.5239, 127.493);
    path_1.cubicTo(53.5239, 127.664, 53.5173, 127.833, 53.5044, 128);
    path_1.lineTo(58.5409, 128);
    path_1.cubicTo(58.528, 127.833, 58.5215, 127.664, 58.5215, 127.493);
    path_1.cubicTo(58.5215, 123.898, 61.4361, 120.983, 65.0315, 120.983);
    path_1.cubicTo(68.6269, 120.983, 71.5415, 123.898, 71.5415, 127.493);
    path_1.cubicTo(71.5415, 127.664, 71.5349, 127.833, 71.522, 128);
    path_1.lineTo(76.5585, 128);
    path_1.cubicTo(76.5456, 127.833, 76.5391, 127.664, 76.5391, 127.493);
    path_1.cubicTo(76.5391, 123.898, 79.4537, 120.983, 83.0491, 120.983);
    path_1.cubicTo(86.6444, 120.983, 89.5591, 123.898, 89.5591, 127.493);
    path_1.cubicTo(89.5591, 127.664, 89.5525, 127.833, 89.5396, 128);
    path_1.lineTo(94.5761, 128);
    path_1.cubicTo(94.5632, 127.833, 94.5566, 127.664, 94.5566, 127.493);
    path_1.cubicTo(94.5566, 123.898, 97.4713, 120.983, 101.067, 120.983);
    path_1.cubicTo(104.662, 120.983, 107.577, 123.898, 107.577, 127.493);
    path_1.cubicTo(107.577, 127.664, 107.57, 127.833, 107.557, 128);
    path_1.lineTo(112.594, 128);
    path_1.cubicTo(112.581, 127.833, 112.574, 127.664, 112.574, 127.493);
    path_1.cubicTo(112.574, 123.898, 115.489, 120.983, 119.084, 120.983);
    path_1.cubicTo(122.68, 120.983, 125.594, 123.898, 125.594, 127.493);
    path_1.cubicTo(125.594, 127.664, 125.588, 127.833, 125.575, 128);
    path_1.lineTo(130, 128);
    path_1.lineTo(130, 0);
    path_1.lineTo(123.189, 0);
    path_1.cubicTo(123.202, 0.165021, 123.208, 0.331764, 123.208, 0.5);
    path_1.close();

    Paint paint_1_fill = Paint()..style = PaintingStyle.fill;
    paint_1_fill.color = Color(0xff5465FF).withOpacity(0.1);
    canvas.drawPath(path_1, paint_1_fill);

    Path path_2 = Path();
    path_2.moveTo(110.227, 0);
    path_2.lineTo(111.224, 0.0758342);
    path_2.lineTo(111.306, -1);
    path_2.lineTo(110.227, -1);
    path_2.lineTo(110.227, 0);
    path_2.close();
    path_2.moveTo(105.899, 0);
    path_2.lineTo(105.899, -1);
    path_2.lineTo(104.82, -1);
    path_2.lineTo(104.902, 0.0758342);
    path_2.lineTo(105.899, 0);
    path_2.close();
    path_2.moveTo(92.9369, 0);
    path_2.lineTo(93.934, 0.0758342);
    path_2.lineTo(94.0159, -1);
    path_2.lineTo(92.9369, -1);
    path_2.lineTo(92.9369, 0);
    path_2.close();
    path_2.moveTo(88.61, 0);
    path_2.lineTo(88.61, -1);
    path_2.lineTo(87.531, -1);
    path_2.lineTo(87.6128, 0.0758342);
    path_2.lineTo(88.61, 0);
    path_2.close();
    path_2.moveTo(75.6479, 0);
    path_2.lineTo(76.645, 0.0758342);
    path_2.lineTo(76.7268, -1);
    path_2.lineTo(75.6479, -1);
    path_2.lineTo(75.6479, 0);
    path_2.close();
    path_2.moveTo(71.3199, 0);
    path_2.lineTo(71.3199, -1);
    path_2.lineTo(70.241, -1);
    path_2.lineTo(70.3228, 0.0758342);
    path_2.lineTo(71.3199, 0);
    path_2.close();
    path_2.moveTo(58.3578, 0);
    path_2.lineTo(59.3549, 0.0758571);
    path_2.lineTo(59.4368, -1);
    path_2.lineTo(58.3578, -1);
    path_2.lineTo(58.3578, 0);
    path_2.close();
    path_2.moveTo(54.0299, 0);
    path_2.lineTo(54.0299, -1);
    path_2.lineTo(52.9509, -1);
    path_2.lineTo(53.0328, 0.0758571);
    path_2.lineTo(54.0299, 0);
    path_2.close();
    path_2.moveTo(41.0678, 0);
    path_2.lineTo(42.0649, 0.0758571);
    path_2.lineTo(42.1467, -1);
    path_2.lineTo(41.0678, -1);
    path_2.lineTo(41.0678, 0);
    path_2.close();
    path_2.moveTo(36.7398, 0);
    path_2.lineTo(36.7398, -1);
    path_2.lineTo(35.6609, -1);
    path_2.lineTo(35.7427, 0.0758571);
    path_2.lineTo(36.7398, 0);
    path_2.close();
    path_2.moveTo(23.7777, 0);
    path_2.lineTo(24.7749, 0.0758571);
    path_2.lineTo(24.8567, -1);
    path_2.lineTo(23.7777, -1);
    path_2.lineTo(23.7777, 0);
    path_2.close();
    path_2.moveTo(19.4498, 0);
    path_2.lineTo(19.4498, -1);
    path_2.lineTo(18.3708, -1);
    path_2.lineTo(18.4527, 0.0758571);
    path_2.lineTo(19.4498, 0);
    path_2.close();
    path_2.moveTo(6.48769, 0);
    path_2.lineTo(7.48481, 0.0758513);
    path_2.lineTo(7.56665, -1);
    path_2.lineTo(6.48769, -1);
    path_2.lineTo(6.48769, 0);
    path_2.close();
    path_2.moveTo(0, 0);
    path_2.lineTo(0, -1);
    path_2.lineTo(-1, -1);
    path_2.lineTo(-1, 0);
    path_2.lineTo(0, 0);
    path_2.close();
    path_2.moveTo(0, 128);
    path_2.lineTo(-1, 128);
    path_2.lineTo(-1, 129);
    path_2.lineTo(0, 129);
    path_2.lineTo(0, 128);
    path_2.close();
    path_2.moveTo(4.48821, 128);
    path_2.lineTo(4.48821, 129);
    path_2.lineTo(5.56822, 129);
    path_2.lineTo(5.48525, 127.923);
    path_2.lineTo(4.48821, 128);
    path_2.close();
    path_2.moveTo(17.4693, 128);
    path_2.lineTo(16.4722, 127.923);
    path_2.lineTo(16.3893, 129);
    path_2.lineTo(17.4693, 129);
    path_2.lineTo(17.4693, 128);
    path_2.close();
    path_2.moveTo(22.5058, 128);
    path_2.lineTo(22.5058, 129);
    path_2.lineTo(23.5858, 129);
    path_2.lineTo(23.5028, 127.923);
    path_2.lineTo(22.5058, 128);
    path_2.close();
    path_2.moveTo(35.4869, 128);
    path_2.lineTo(34.4898, 127.923);
    path_2.lineTo(34.4069, 129);
    path_2.lineTo(35.4869, 129);
    path_2.lineTo(35.4869, 128);
    path_2.close();
    path_2.moveTo(40.5234, 128);
    path_2.lineTo(40.5234, 129);
    path_2.lineTo(41.6034, 129);
    path_2.lineTo(41.5204, 127.923);
    path_2.lineTo(40.5234, 128);
    path_2.close();
    path_2.moveTo(53.5044, 128);
    path_2.lineTo(52.5074, 127.923);
    path_2.lineTo(52.4244, 129);
    path_2.lineTo(53.5044, 129);
    path_2.lineTo(53.5044, 128);
    path_2.close();
    path_2.moveTo(58.5409, 128);
    path_2.lineTo(58.5409, 129);
    path_2.lineTo(59.621, 129);
    path_2.lineTo(59.538, 127.923);
    path_2.lineTo(58.5409, 128);
    path_2.close();
    path_2.moveTo(71.522, 128);
    path_2.lineTo(70.525, 127.923);
    path_2.lineTo(70.442, 129);
    path_2.lineTo(71.522, 129);
    path_2.lineTo(71.522, 128);
    path_2.close();
    path_2.moveTo(76.5585, 128);
    path_2.lineTo(76.5585, 129);
    path_2.lineTo(77.6385, 129);
    path_2.lineTo(77.5556, 127.923);
    path_2.lineTo(76.5585, 128);
    path_2.close();
    path_2.moveTo(89.5396, 128);
    path_2.lineTo(88.5426, 127.923);
    path_2.lineTo(88.4596, 129);
    path_2.lineTo(89.5396, 129);
    path_2.lineTo(89.5396, 128);
    path_2.close();
    path_2.moveTo(94.5761, 128);
    path_2.lineTo(94.5761, 129);
    path_2.lineTo(95.6561, 129);
    path_2.lineTo(95.5731, 127.923);
    path_2.lineTo(94.5761, 128);
    path_2.close();
    path_2.moveTo(107.557, 128);
    path_2.lineTo(106.56, 127.923);
    path_2.lineTo(106.477, 129);
    path_2.lineTo(107.557, 129);
    path_2.lineTo(107.557, 128);
    path_2.close();
    path_2.moveTo(112.594, 128);
    path_2.lineTo(112.594, 129);
    path_2.lineTo(113.674, 129);
    path_2.lineTo(113.591, 127.923);
    path_2.lineTo(112.594, 128);
    path_2.close();
    path_2.moveTo(125.575, 128);
    path_2.lineTo(124.578, 127.923);
    path_2.lineTo(124.495, 129);
    path_2.lineTo(125.575, 129);
    path_2.lineTo(125.575, 128);
    path_2.close();
    path_2.moveTo(130, 128);
    path_2.lineTo(130, 129);
    path_2.lineTo(131, 129);
    path_2.lineTo(131, 128);
    path_2.lineTo(130, 128);
    path_2.close();
    path_2.moveTo(130, 0);
    path_2.lineTo(131, 0);
    path_2.lineTo(131, -1);
    path_2.lineTo(130, -1);
    path_2.lineTo(130, 0);
    path_2.close();
    path_2.moveTo(123.189, 0);
    path_2.lineTo(123.189, -1);
    path_2.lineTo(122.11, -1);
    path_2.lineTo(122.192, 0.0758342);
    path_2.lineTo(123.189, 0);
    path_2.close();
    path_2.moveTo(116.708, 8);
    path_2.cubicTo(120.85, 8, 124.208, 4.64214, 124.208, 0.5);
    path_2.lineTo(122.208, 0.5);
    path_2.cubicTo(122.208, 3.53757, 119.746, 6, 116.708, 6);
    path_2.lineTo(116.708, 8);
    path_2.close();
    path_2.moveTo(109.208, 0.5);
    path_2.cubicTo(109.208, 4.64214, 112.566, 8, 116.708, 8);
    path_2.lineTo(116.708, 6);
    path_2.cubicTo(113.67, 6, 111.208, 3.53757, 111.208, 0.5);
    path_2.lineTo(109.208, 0.5);
    path_2.close();
    path_2.moveTo(109.23, -0.0758342);
    path_2.cubicTo(109.215, 0.11438, 109.208, 0.306419, 109.208, 0.5);
    path_2.lineTo(111.208, 0.5);
    path_2.cubicTo(111.208, 0.357109, 111.213, 0.215662, 111.224, 0.0758342);
    path_2.lineTo(109.23, -0.0758342);
    path_2.close();
    path_2.moveTo(105.899, 1);
    path_2.lineTo(110.227, 1);
    path_2.lineTo(110.227, -1);
    path_2.lineTo(105.899, -1);
    path_2.lineTo(105.899, 1);
    path_2.close();
    path_2.moveTo(106.918, 0.5);
    path_2.cubicTo(106.918, 0.306419, 106.911, 0.11438, 106.896, -0.0758342);
    path_2.lineTo(104.902, 0.0758342);
    path_2.cubicTo(104.913, 0.215662, 104.918, 0.357109, 104.918, 0.5);
    path_2.lineTo(106.918, 0.5);
    path_2.close();
    path_2.moveTo(99.418, 8);
    path_2.cubicTo(103.56, 8, 106.918, 4.64214, 106.918, 0.5);
    path_2.lineTo(104.918, 0.5);
    path_2.cubicTo(104.918, 3.53757, 102.456, 6, 99.418, 6);
    path_2.lineTo(99.418, 8);
    path_2.close();
    path_2.moveTo(91.918, 0.5);
    path_2.cubicTo(91.918, 4.64214, 95.2758, 8, 99.418, 8);
    path_2.lineTo(99.418, 6);
    path_2.cubicTo(96.3804, 6, 93.918, 3.53757, 93.918, 0.5);
    path_2.lineTo(91.918, 0.5);
    path_2.close();
    path_2.moveTo(91.9398, -0.0758342);
    path_2.cubicTo(91.9253, 0.11438, 91.918, 0.306419, 91.918, 0.5);
    path_2.lineTo(93.918, 0.5);
    path_2.cubicTo(93.918, 0.357109, 93.9234, 0.215662, 93.934, 0.0758342);
    path_2.lineTo(91.9398, -0.0758342);
    path_2.close();
    path_2.moveTo(88.61, 1);
    path_2.lineTo(92.9369, 1);
    path_2.lineTo(92.9369, -1);
    path_2.lineTo(88.61, -1);
    path_2.lineTo(88.61, 1);
    path_2.close();
    path_2.moveTo(89.6289, 0.5);
    path_2.cubicTo(89.6289, 0.306419, 89.6215, 0.11438, 89.6071, -0.0758342);
    path_2.lineTo(87.6128, 0.0758342);
    path_2.cubicTo(87.6235, 0.215662, 87.6289, 0.357109, 87.6289, 0.5);
    path_2.lineTo(89.6289, 0.5);
    path_2.close();
    path_2.moveTo(82.1289, 8);
    path_2.cubicTo(86.271, 8, 89.6289, 4.64214, 89.6289, 0.5);
    path_2.lineTo(87.6289, 0.5);
    path_2.cubicTo(87.6289, 3.53757, 85.1665, 6, 82.1289, 6);
    path_2.lineTo(82.1289, 8);
    path_2.close();
    path_2.moveTo(74.6289, 0.5);
    path_2.cubicTo(74.6289, 4.64214, 77.9868, 8, 82.1289, 8);
    path_2.lineTo(82.1289, 6);
    path_2.cubicTo(79.0913, 6, 76.6289, 3.53757, 76.6289, 0.5);
    path_2.lineTo(74.6289, 0.5);
    path_2.close();
    path_2.moveTo(74.6507, -0.0758342);
    path_2.cubicTo(74.6363, 0.11438, 74.6289, 0.306419, 74.6289, 0.5);
    path_2.lineTo(76.6289, 0.5);
    path_2.cubicTo(76.6289, 0.357109, 76.6343, 0.215662, 76.645, 0.0758342);
    path_2.lineTo(74.6507, -0.0758342);
    path_2.close();
    path_2.moveTo(71.3199, 1);
    path_2.lineTo(75.6479, 1);
    path_2.lineTo(75.6479, -1);
    path_2.lineTo(71.3199, -1);
    path_2.lineTo(71.3199, 1);
    path_2.close();
    path_2.moveTo(72.3389, 0.5);
    path_2.cubicTo(72.3389, 0.306419, 72.3315, 0.11438, 72.317, -0.0758342);
    path_2.lineTo(70.3228, 0.0758342);
    path_2.cubicTo(70.3334, 0.215662, 70.3389, 0.357109, 70.3389, 0.5);
    path_2.lineTo(72.3389, 0.5);
    path_2.close();
    path_2.moveTo(64.8389, 8);
    path_2.cubicTo(68.981, 8, 72.3389, 4.64214, 72.3389, 0.5);
    path_2.lineTo(70.3389, 0.5);
    path_2.cubicTo(70.3389, 3.53757, 67.8764, 6, 64.8389, 6);
    path_2.lineTo(64.8389, 8);
    path_2.close();
    path_2.moveTo(57.3389, 0.5);
    path_2.cubicTo(57.3389, 4.64214, 60.6967, 8, 64.8389, 8);
    path_2.lineTo(64.8389, 6);
    path_2.cubicTo(61.8013, 6, 59.3389, 3.53757, 59.3389, 0.5);
    path_2.lineTo(57.3389, 0.5);
    path_2.close();
    path_2.moveTo(57.3607, -0.0758571);
    path_2.cubicTo(57.3462, 0.114387, 57.3389, 0.306434, 57.3389, 0.5);
    path_2.lineTo(59.3389, 0.5);
    path_2.cubicTo(59.3389, 0.357094, 59.3443, 0.215654, 59.3549, 0.0758571);
    path_2.lineTo(57.3607, -0.0758571);
    path_2.close();
    path_2.moveTo(54.0299, 1);
    path_2.lineTo(58.3578, 1);
    path_2.lineTo(58.3578, -1);
    path_2.lineTo(54.0299, -1);
    path_2.lineTo(54.0299, 1);
    path_2.close();
    path_2.moveTo(55.0488, 0.5);
    path_2.cubicTo(55.0488, 0.306434, 55.0415, 0.114387, 55.027, -0.0758571);
    path_2.lineTo(53.0328, 0.0758571);
    path_2.cubicTo(53.0434, 0.215654, 53.0488, 0.357094, 53.0488, 0.5);
    path_2.lineTo(55.0488, 0.5);
    path_2.close();
    path_2.moveTo(47.5488, 8);
    path_2.cubicTo(51.691, 8, 55.0488, 4.64214, 55.0488, 0.5);
    path_2.lineTo(53.0488, 0.5);
    path_2.cubicTo(53.0488, 3.53757, 50.5864, 6, 47.5488, 6);
    path_2.lineTo(47.5488, 8);
    path_2.close();
    path_2.moveTo(40.0488, 0.5);
    path_2.cubicTo(40.0488, 4.64214, 43.4067, 8, 47.5488, 8);
    path_2.lineTo(47.5488, 6);
    path_2.cubicTo(44.5113, 6, 42.0488, 3.53757, 42.0488, 0.5);
    path_2.lineTo(40.0488, 0.5);
    path_2.close();
    path_2.moveTo(40.0707, -0.0758571);
    path_2.cubicTo(40.0562, 0.114387, 40.0488, 0.306434, 40.0488, 0.5);
    path_2.lineTo(42.0488, 0.5);
    path_2.cubicTo(42.0488, 0.357094, 42.0543, 0.215654, 42.0649, 0.0758571);
    path_2.lineTo(40.0707, -0.0758571);
    path_2.close();
    path_2.moveTo(36.7398, 1);
    path_2.lineTo(41.0678, 1);
    path_2.lineTo(41.0678, -1);
    path_2.lineTo(36.7398, -1);
    path_2.lineTo(36.7398, 1);
    path_2.close();
    path_2.moveTo(37.7588, 0.5);
    path_2.cubicTo(37.7588, 0.306434, 37.7514, 0.114387, 37.737, -0.0758571);
    path_2.lineTo(35.7427, 0.0758571);
    path_2.cubicTo(35.7534, 0.215654, 35.7588, 0.357094, 35.7588, 0.5);
    path_2.lineTo(37.7588, 0.5);
    path_2.close();
    path_2.moveTo(30.2588, 8);
    path_2.cubicTo(34.4009, 8, 37.7588, 4.64214, 37.7588, 0.5);
    path_2.lineTo(35.7588, 0.5);
    path_2.cubicTo(35.7588, 3.53757, 33.2964, 6, 30.2588, 6);
    path_2.lineTo(30.2588, 8);
    path_2.close();
    path_2.moveTo(22.7588, 0.5);
    path_2.cubicTo(22.7588, 4.64214, 26.1167, 8, 30.2588, 8);
    path_2.lineTo(30.2588, 6);
    path_2.cubicTo(27.2212, 6, 24.7588, 3.53757, 24.7588, 0.5);
    path_2.lineTo(22.7588, 0.5);
    path_2.close();
    path_2.moveTo(22.7806, -0.0758571);
    path_2.cubicTo(22.7661, 0.11438, 22.7588, 0.306427, 22.7588, 0.5);
    path_2.lineTo(24.7588, 0.5);
    path_2.cubicTo(24.7588, 0.357101, 24.7642, 0.215662, 24.7749, 0.0758571);
    path_2.lineTo(22.7806, -0.0758571);
    path_2.close();
    path_2.moveTo(19.4498, 1);
    path_2.lineTo(23.7777, 1);
    path_2.lineTo(23.7777, -1);
    path_2.lineTo(19.4498, -1);
    path_2.lineTo(19.4498, 1);
    path_2.close();
    path_2.moveTo(20.4688, 0.5);
    path_2.cubicTo(20.4688, 0.306427, 20.4614, 0.11438, 20.4469, -0.0758571);
    path_2.lineTo(18.4527, 0.0758571);
    path_2.cubicTo(18.4633, 0.215662, 18.4688, 0.357101, 18.4688, 0.5);
    path_2.lineTo(20.4688, 0.5);
    path_2.close();
    path_2.moveTo(12.9688, 8);
    path_2.cubicTo(17.1109, 8, 20.4688, 4.64214, 20.4688, 0.5);
    path_2.lineTo(18.4688, 0.5);
    path_2.cubicTo(18.4688, 3.53757, 16.0063, 6, 12.9688, 6);
    path_2.lineTo(12.9688, 8);
    path_2.close();
    path_2.moveTo(5.46875, 0.5);
    path_2.cubicTo(5.46875, 4.64214, 8.82661, 8, 12.9688, 8);
    path_2.lineTo(12.9688, 6);
    path_2.cubicTo(9.93118, 6, 7.46875, 3.53757, 7.46875, 0.5);
    path_2.lineTo(5.46875, 0.5);
    path_2.close();
    path_2.moveTo(5.49058, -0.0758513);
    path_2.cubicTo(5.4761, 0.114382, 5.46875, 0.306427, 5.46875, 0.5);
    path_2.lineTo(7.46875, 0.5);
    path_2.cubicTo(7.46875, 0.357101, 7.47418, 0.21566, 7.48481, 0.0758513);
    path_2.lineTo(5.49058, -0.0758513);
    path_2.close();
    path_2.moveTo(0, 1);
    path_2.lineTo(6.48769, 1);
    path_2.lineTo(6.48769, -1);
    path_2.lineTo(0, -1);
    path_2.lineTo(0, 1);
    path_2.close();
    path_2.moveTo(1, 128);
    path_2.lineTo(1, 0);
    path_2.lineTo(-1, 0);
    path_2.lineTo(-1, 128);
    path_2.lineTo(1, 128);
    path_2.close();
    path_2.moveTo(4.48821, 127);
    path_2.lineTo(0, 127);
    path_2.lineTo(0, 129);
    path_2.lineTo(4.48821, 129);
    path_2.lineTo(4.48821, 127);
    path_2.close();
    path_2.moveTo(3.46875, 127.493);
    path_2.cubicTo(3.46875, 127.689, 3.4763, 127.884, 3.49116, 128.077);
    path_2.lineTo(5.48525, 127.923);
    path_2.cubicTo(5.47433, 127.781, 5.46875, 127.638, 5.46875, 127.493);
    path_2.lineTo(3.46875, 127.493);
    path_2.close();
    path_2.moveTo(10.9788, 119.983);
    path_2.cubicTo(6.83109, 119.983, 3.46875, 123.345, 3.46875, 127.493);
    path_2.lineTo(5.46875, 127.493);
    path_2.cubicTo(5.46875, 124.45, 7.93566, 121.983, 10.9788, 121.983);
    path_2.lineTo(10.9788, 119.983);
    path_2.close();
    path_2.moveTo(18.4888, 127.493);
    path_2.cubicTo(18.4888, 123.345, 15.1264, 119.983, 10.9788, 119.983);
    path_2.lineTo(10.9788, 121.983);
    path_2.cubicTo(14.0218, 121.983, 16.4888, 124.45, 16.4888, 127.493);
    path_2.lineTo(18.4888, 127.493);
    path_2.close();
    path_2.moveTo(18.4663, 128.077);
    path_2.cubicTo(18.4812, 127.884, 18.4888, 127.689, 18.4888, 127.493);
    path_2.lineTo(16.4888, 127.493);
    path_2.cubicTo(16.4888, 127.638, 16.4832, 127.781, 16.4722, 127.923);
    path_2.lineTo(18.4663, 128.077);
    path_2.close();
    path_2.moveTo(22.5058, 127);
    path_2.lineTo(17.4693, 127);
    path_2.lineTo(17.4693, 129);
    path_2.lineTo(22.5058, 129);
    path_2.lineTo(22.5058, 127);
    path_2.close();
    path_2.moveTo(21.4863, 127.493);
    path_2.cubicTo(21.4863, 127.689, 21.4939, 127.884, 21.5087, 128.077);
    path_2.lineTo(23.5028, 127.923);
    path_2.cubicTo(23.4919, 127.781, 23.4863, 127.638, 23.4863, 127.493);
    path_2.lineTo(21.4863, 127.493);
    path_2.close();
    path_2.moveTo(28.9963, 119.983);
    path_2.cubicTo(24.8487, 119.983, 21.4863, 123.345, 21.4863, 127.493);
    path_2.lineTo(23.4863, 127.493);
    path_2.cubicTo(23.4863, 124.45, 25.9532, 121.983, 28.9963, 121.983);
    path_2.lineTo(28.9963, 119.983);
    path_2.close();
    path_2.moveTo(36.5063, 127.493);
    path_2.cubicTo(36.5063, 123.345, 33.144, 119.983, 28.9963, 119.983);
    path_2.lineTo(28.9963, 121.983);
    path_2.cubicTo(32.0394, 121.983, 34.5063, 124.45, 34.5063, 127.493);
    path_2.lineTo(36.5063, 127.493);
    path_2.close();
    path_2.moveTo(36.4839, 128.077);
    path_2.cubicTo(36.4988, 127.884, 36.5063, 127.689, 36.5063, 127.493);
    path_2.lineTo(34.5063, 127.493);
    path_2.cubicTo(34.5063, 127.638, 34.5008, 127.781, 34.4898, 127.923);
    path_2.lineTo(36.4839, 128.077);
    path_2.close();
    path_2.moveTo(40.5234, 127);
    path_2.lineTo(35.4869, 127);
    path_2.lineTo(35.4869, 129);
    path_2.lineTo(40.5234, 129);
    path_2.lineTo(40.5234, 127);
    path_2.close();
    path_2.moveTo(39.5039, 127.493);
    path_2.cubicTo(39.5039, 127.689, 39.5115, 127.884, 39.5263, 128.077);
    path_2.lineTo(41.5204, 127.923);
    path_2.cubicTo(41.5095, 127.781, 41.5039, 127.638, 41.5039, 127.493);
    path_2.lineTo(39.5039, 127.493);
    path_2.close();
    path_2.moveTo(47.0139, 119.983);
    path_2.cubicTo(42.8662, 119.983, 39.5039, 123.345, 39.5039, 127.493);
    path_2.lineTo(41.5039, 127.493);
    path_2.cubicTo(41.5039, 124.45, 43.9708, 121.983, 47.0139, 121.983);
    path_2.lineTo(47.0139, 119.983);
    path_2.close();
    path_2.moveTo(54.5239, 127.493);
    path_2.cubicTo(54.5239, 123.345, 51.1616, 119.983, 47.0139, 119.983);
    path_2.lineTo(47.0139, 121.983);
    path_2.cubicTo(50.057, 121.983, 52.5239, 124.45, 52.5239, 127.493);
    path_2.lineTo(54.5239, 127.493);
    path_2.close();
    path_2.moveTo(54.5015, 128.077);
    path_2.cubicTo(54.5164, 127.884, 54.5239, 127.689, 54.5239, 127.493);
    path_2.lineTo(52.5239, 127.493);
    path_2.cubicTo(52.5239, 127.638, 52.5183, 127.781, 52.5074, 127.923);
    path_2.lineTo(54.5015, 128.077);
    path_2.close();
    path_2.moveTo(58.5409, 127);
    path_2.lineTo(53.5044, 127);
    path_2.lineTo(53.5044, 129);
    path_2.lineTo(58.5409, 129);
    path_2.lineTo(58.5409, 127);
    path_2.close();
    path_2.moveTo(57.5215, 127.493);
    path_2.cubicTo(57.5215, 127.689, 57.529, 127.884, 57.5439, 128.077);
    path_2.lineTo(59.538, 127.923);
    path_2.cubicTo(59.5271, 127.781, 59.5215, 127.638, 59.5215, 127.493);
    path_2.lineTo(57.5215, 127.493);
    path_2.close();
    path_2.moveTo(65.0315, 119.983);
    path_2.cubicTo(60.8838, 119.983, 57.5215, 123.345, 57.5215, 127.493);
    path_2.lineTo(59.5215, 127.493);
    path_2.cubicTo(59.5215, 124.45, 61.9884, 121.983, 65.0315, 121.983);
    path_2.lineTo(65.0315, 119.983);
    path_2.close();
    path_2.moveTo(72.5415, 127.493);
    path_2.cubicTo(72.5415, 123.345, 69.1791, 119.983, 65.0315, 119.983);
    path_2.lineTo(65.0315, 121.983);
    path_2.cubicTo(68.0746, 121.983, 70.5415, 124.45, 70.5415, 127.493);
    path_2.lineTo(72.5415, 127.493);
    path_2.close();
    path_2.moveTo(72.5191, 128.077);
    path_2.cubicTo(72.5339, 127.884, 72.5415, 127.689, 72.5415, 127.493);
    path_2.lineTo(70.5415, 127.493);
    path_2.cubicTo(70.5415, 127.638, 70.5359, 127.781, 70.525, 127.923);
    path_2.lineTo(72.5191, 128.077);
    path_2.close();
    path_2.moveTo(76.5585, 127);
    path_2.lineTo(71.522, 127);
    path_2.lineTo(71.522, 129);
    path_2.lineTo(76.5585, 129);
    path_2.lineTo(76.5585, 127);
    path_2.close();
    path_2.moveTo(75.5391, 127.493);
    path_2.cubicTo(75.5391, 127.689, 75.5466, 127.884, 75.5615, 128.077);
    path_2.lineTo(77.5556, 127.923);
    path_2.cubicTo(77.5446, 127.781, 77.5391, 127.638, 77.5391, 127.493);
    path_2.lineTo(75.5391, 127.493);
    path_2.close();
    path_2.moveTo(83.0491, 119.983);
    path_2.cubicTo(78.9014, 119.983, 75.5391, 123.345, 75.5391, 127.493);
    path_2.lineTo(77.5391, 127.493);
    path_2.cubicTo(77.5391, 124.45, 80.006, 121.983, 83.0491, 121.983);
    path_2.lineTo(83.0491, 119.983);
    path_2.close();
    path_2.moveTo(90.5591, 127.493);
    path_2.cubicTo(90.5591, 123.345, 87.1967, 119.983, 83.0491, 119.983);
    path_2.lineTo(83.0491, 121.983);
    path_2.cubicTo(86.0922, 121.983, 88.5591, 124.45, 88.5591, 127.493);
    path_2.lineTo(90.5591, 127.493);
    path_2.close();
    path_2.moveTo(90.5367, 128.077);
    path_2.cubicTo(90.5515, 127.884, 90.5591, 127.689, 90.5591, 127.493);
    path_2.lineTo(88.5591, 127.493);
    path_2.cubicTo(88.5591, 127.638, 88.5535, 127.781, 88.5426, 127.923);
    path_2.lineTo(90.5367, 128.077);
    path_2.close();
    path_2.moveTo(94.5761, 127);
    path_2.lineTo(89.5396, 127);
    path_2.lineTo(89.5396, 129);
    path_2.lineTo(94.5761, 129);
    path_2.lineTo(94.5761, 127);
    path_2.close();
    path_2.moveTo(93.5566, 127.493);
    path_2.cubicTo(93.5566, 127.689, 93.5642, 127.884, 93.5791, 128.077);
    path_2.lineTo(95.5731, 127.923);
    path_2.cubicTo(95.5622, 127.781, 95.5566, 127.638, 95.5566, 127.493);
    path_2.lineTo(93.5566, 127.493);
    path_2.close();
    path_2.moveTo(101.067, 119.983);
    path_2.cubicTo(96.919, 119.983, 93.5566, 123.345, 93.5566, 127.493);
    path_2.lineTo(95.5566, 127.493);
    path_2.cubicTo(95.5566, 124.45, 98.0236, 121.983, 101.067, 121.983);
    path_2.lineTo(101.067, 119.983);
    path_2.close();
    path_2.moveTo(108.577, 127.493);
    path_2.cubicTo(108.577, 123.345, 105.214, 119.983, 101.067, 119.983);
    path_2.lineTo(101.067, 121.983);
    path_2.cubicTo(104.11, 121.983, 106.577, 124.45, 106.577, 127.493);
    path_2.lineTo(108.577, 127.493);
    path_2.close();
    path_2.moveTo(108.554, 128.077);
    path_2.cubicTo(108.569, 127.884, 108.577, 127.689, 108.577, 127.493);
    path_2.lineTo(106.577, 127.493);
    path_2.cubicTo(106.577, 127.638, 106.571, 127.781, 106.56, 127.923);
    path_2.lineTo(108.554, 128.077);
    path_2.close();
    path_2.moveTo(112.594, 127);
    path_2.lineTo(107.557, 127);
    path_2.lineTo(107.557, 129);
    path_2.lineTo(112.594, 129);
    path_2.lineTo(112.594, 127);
    path_2.close();
    path_2.moveTo(113.591, 127.923);
    path_2.cubicTo(113.58, 127.781, 113.574, 127.638, 113.574, 127.493);
    path_2.lineTo(111.574, 127.493);
    path_2.cubicTo(111.574, 127.689, 111.582, 127.884, 111.597, 128.077);
    path_2.lineTo(113.591, 127.923);
    path_2.close();
    path_2.moveTo(113.574, 127.493);
    path_2.cubicTo(113.574, 124.45, 116.041, 121.983, 119.084, 121.983);
    path_2.lineTo(119.084, 119.983);
    path_2.cubicTo(114.937, 119.983, 111.574, 123.345, 111.574, 127.493);
    path_2.lineTo(113.574, 127.493);
    path_2.close();
    path_2.moveTo(119.084, 121.983);
    path_2.cubicTo(122.127, 121.983, 124.594, 124.45, 124.594, 127.493);
    path_2.lineTo(126.594, 127.493);
    path_2.cubicTo(126.594, 123.345, 123.232, 119.983, 119.084, 119.983);
    path_2.lineTo(119.084, 121.983);
    path_2.close();
    path_2.moveTo(124.594, 127.493);
    path_2.cubicTo(124.594, 127.638, 124.589, 127.781, 124.578, 127.923);
    path_2.lineTo(126.572, 128.077);
    path_2.cubicTo(126.587, 127.884, 126.594, 127.689, 126.594, 127.493);
    path_2.lineTo(124.594, 127.493);
    path_2.close();
    path_2.moveTo(130, 127);
    path_2.lineTo(125.575, 127);
    path_2.lineTo(125.575, 129);
    path_2.lineTo(130, 129);
    path_2.lineTo(130, 127);
    path_2.close();
    path_2.moveTo(129, 0);
    path_2.lineTo(129, 128);
    path_2.lineTo(131, 128);
    path_2.lineTo(131, 0);
    path_2.lineTo(129, 0);
    path_2.close();
    path_2.moveTo(123.189, 1);
    path_2.lineTo(130, 1);
    path_2.lineTo(130, -1);
    path_2.lineTo(123.189, -1);
    path_2.lineTo(123.189, 1);
    path_2.close();
    path_2.moveTo(124.208, 0.5);
    path_2.cubicTo(124.208, 0.306419, 124.201, 0.11438, 124.186, -0.0758342);
    path_2.lineTo(122.192, 0.0758342);
    path_2.cubicTo(122.203, 0.215662, 122.208, 0.357109, 122.208, 0.5);
    path_2.lineTo(124.208, 0.5);
    path_2.close();

    Paint paint_2_fill = Paint()..style = PaintingStyle.fill;
    paint_2_fill.color = Color(0xff5465FF).withOpacity(0.1);
    canvas.drawPath(path_2, paint_2_fill);
  }

  @override
  bool shouldRepaint(covariant CustomPainter oldDelegate) {
    return true;
  }
}
